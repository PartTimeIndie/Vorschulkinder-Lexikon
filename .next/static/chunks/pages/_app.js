/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./styles/globals.css":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./styles/globals.css ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Global Styles - Mobile First Design */\\n* {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nhtml,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n  background: linear-gradient(135deg, #e3f2fd 0%, #f1f8e9 100%);\\n  min-height: 100vh;\\n  overflow-x: hidden;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\nbutton {\\n  border: none;\\n  background: none;\\n  cursor: pointer;\\n  font-family: inherit;\\n}\\n\\n/* Main Layout Container - Responsive Design */\\n.container {\\n  width: 100vw;\\n  height: 100vh;\\n  overflow: hidden;\\n  position: relative;\\n  display: grid;\\n}\\n\\n/* Desktop Layout (Landscape) - Horizontal Layout */\\n@media (min-width: 768px) and (orientation: landscape) {\\n  .container {\\n    grid-template-columns: 1fr 4fr; /* 1/5 für Character, 4/5 für Tiles */\\n    grid-template-rows: 1fr;\\n    grid-template-areas:\\n      \\\"character categories\\\";\\n  }\\n  \\n  .character-section {\\n    grid-area: character;\\n    background-image: linear-gradient(135deg, #c8e6c9 0%, #81c784 100%);\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n    padding: 0.1rem 0.1rem 0 0.1rem;\\n    box-shadow: inset -2px 0 8px rgba(0, 0, 0, 0.1);\\n    border: 3px solid #654321;\\n    position: relative;\\n    overflow: hidden;\\n  }\\n  \\n  /* Baumhaus als separates pseudo-element für bessere Kontrolle */\\n  .character-section::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n    background-size: auto 100%; /* Höhe auf 100% fixiert, Breite automatisch */\\n    background-position: center bottom; /* Am unteren Rand verankert */\\n    z-index: 0;\\n  }\\n  \\n  .categories-section {\\n    grid-area: categories;\\n    background: url('/background.png') center/cover, linear-gradient(135deg, #f5f5f5 0%, #e8f5e8 100%);\\n    overflow-y: auto;\\n    padding: 2rem;\\n    padding-left: 1rem;\\n  }\\n  \\n  .character-container {\\n    position: relative !important;\\n    width: 100% !important;\\n    max-width: 400px !important;\\n    height: 500px !important;\\n    right: auto !important;\\n    top: auto !important;\\n    bottom: 10px !important;\\n    transform: none !important;\\n    margin-bottom: 0 !important;\\n    z-index: 1; /* Über dem Baumhaus */\\n  }\\n}\\n\\n/* Mobile Landscape - Speziell für Mobile Geräte im Landscape-Modus */\\n@media (max-width: 767px) and (orientation: landscape) {\\n  .container {\\n    grid-template-columns: 1fr 2fr; /* Gleiche horizontale Layout aber weniger Platz für Character */\\n    grid-template-rows: 1fr;\\n    grid-template-areas:\\n      \\\"character categories\\\";\\n    height: 100vh;\\n    overflow: hidden;\\n  }\\n  \\n  .character-section {\\n    grid-area: character;\\n    background-image: linear-gradient(135deg, #c8e6c9 0%, #81c784 100%);\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n    padding: 0.1rem 0.1rem 0 0.1rem;\\n    box-shadow: inset -2px 0 8px rgba(0, 0, 0, 0.1);\\n    border: 3px solid #654321;\\n    position: relative;\\n    max-height: 100vh;\\n    overflow: hidden;\\n  }\\n  \\n  /* Mobile Landscape Baumhaus */\\n  .character-section::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n    background-size: auto 100%; /* Höhe fixiert auf Container */\\n    background-position: center bottom;\\n    z-index: 0;\\n  }\\n  \\n  .categories-section {\\n    grid-area: categories;\\n    background: url('/background.png') center/cover, linear-gradient(135deg, #f5f5f5 0%, #e8f5e8 100%);\\n    overflow-y: auto;\\n    padding: 1rem;\\n    max-height: 100vh; /* Begrenzt die Höhe auf Viewport */\\n  }\\n  \\n  .character-container {\\n    position: relative !important;\\n    width: 100% !important;\\n    max-width: 250px !important; /* Noch kleinerer Character für Mobile Landscape */\\n    height: calc(100vh - 100px) !important; /* Mehr Puffer - weniger Höhe */\\n    max-height: 300px !important; /* Niedrigere Maximalhöhe */\\n    right: auto !important;\\n    top: auto !important;\\n    bottom: 5px !important;\\n    transform: none !important;\\n    margin-bottom: 0 !important;\\n    z-index: 1; /* Über dem Baumhaus */\\n  }\\n  \\n  /* Mobile Landscape: Kleinere Tiles */\\n  .tile-grid {\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr); /* 3 Spalten für Mobile Landscape */\\n    grid-gap: 0.5rem;\\n    gap: 0.5rem;\\n    padding: 0.5rem;\\n  }\\n  \\n  .category-tile {\\n    width: 100px !important;\\n    height: 100px !important;\\n    min-width: 80px !important;\\n    min-height: 80px !important;\\n    max-width: 120px !important;\\n    max-height: 120px !important;\\n    aspect-ratio: 1 / 1 !important;\\n  }\\n}\\n\\n/* Portrait Layout (Mobile/Tablet) - Vertical Layout mit 50/50 Split */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .container {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 1fr 1fr; /* 50% oben für Character, 50% unten für Tiles */\\n    grid-template-areas:\\n      \\\"character\\\"\\n      \\\"categories\\\";\\n  }\\n  \\n  .character-section {\\n    grid-area: character;\\n    background-image: linear-gradient(135deg, #c8e6c9 0%, #81c784 100%);\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n    padding: 1rem 1rem 0 1rem;\\n    box-shadow: inset 0 -2px 8px rgba(0, 0, 0, 0.1);\\n    border: 3px solid #654321;\\n    position: relative;\\n    min-height: 0;\\n    overflow: hidden;\\n  }\\n  \\n  /* Portrait Baumhaus */\\n  .character-section::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n    background-size: auto 100%; /* Höhe auf Container fixiert */\\n    background-position: center bottom;\\n    z-index: 0;\\n  }\\n  \\n  .categories-section {\\n    grid-area: categories;\\n    background: url('/background.png') center/cover, linear-gradient(135deg, #f5f5f5 0%, #e8f5e8 100%);\\n    overflow-y: auto;\\n    padding: 1rem;\\n    min-height: 0;\\n  }\\n  \\n  .character-container {\\n    position: relative !important;\\n    width: 280px !important;\\n    height: 350px !important;\\n    right: auto !important;\\n    bottom: 0px !important; /* Direkt am Boden, kein Offset */\\n    top: auto !important;\\n    transform: none !important;\\n    margin-bottom: 0 !important;\\n    z-index: 1; /* Über dem Baumhaus */\\n  }\\n}\\n\\n/* ===== TILE GRID DEFINITIONS ===== */\\n\\n/* Desktop Landscape: Standard Multi-Column Grid */\\n@media (min-width: 768px) and (orientation: landscape) {\\n  .tile-grid {\\n    display: grid;\\n    grid-gap: 1.5rem;\\n    gap: 1.5rem;\\n    padding-bottom: 2rem;\\n    grid-template-columns: repeat(4, 1fr); /* 4 Spalten für Desktop */\\n    max-width: none;\\n  }\\n  \\n  /* Kleinere Desktop Screens: 3 Spalten */\\n  @media (max-width: 1400px) {\\n    .tile-grid {\\n      grid-template-columns: repeat(3, 1fr);\\n    }\\n  }\\n}\\n\\n/* Portrait: 2 Tiles nebeneinander - kleinere Margins */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .tile-grid {\\n    display: grid;\\n    grid-template-columns: repeat(2, 1fr);/* 2 Spalten nebeneinander */\\n    grid-gap: 0.5rem;\\n    gap: 0.5rem; /* Kleinerer Gap für mehr Platz */\\n    justify-items: center; /* Tiles in Spalten zentriert */\\n  }\\n  \\n  /* Portrait Tiles: Automatische Skalierung mit kleineren Margins */\\n  .category-tile {\\n    width: calc((100vw - 2rem) / 2) !important; /* Angepasst für kleinere Margins: (100% - 1rem padding + 0.5rem gap) / 2 */\\n    height: calc((100vw - 2rem) / 2) !important; /* Gleiche Höhe für Quadrat */\\n    min-width: 140px !important; /* Mindestgröße für sehr kleine Screens */\\n    min-height: 140px !important;\\n    max-width: 200px !important; /* Maximalgröße für sehr große Tablets */\\n    max-height: 200px !important;\\n    aspect-ratio: 1 / 1 !important; /* Perfektes 1:1 Verhältnis */\\n    display: block;\\n    border-radius: 20px;\\n    margin: 0;\\n    flex-shrink: 0;\\n    flex-grow: 0;\\n  }\\n  \\n  /* Portrait: Content verstecken - nur Bilder wie Desktop */\\n  .category-tile .category-content {\\n    display: none !important; /* Kein Text im Portrait - nur Bilder */\\n  }\\n  \\n  /* Portrait: Bild füllt komplettes Tile */\\n  .category-tile .category-image {\\n    width: 100% !important;\\n    height: 100% !important;\\n    object-fit: cover;\\n    border-radius: inherit;\\n  }\\n}\\n\\n/* Kategorie Tile Styles - Standard für Desktop */\\n.category-tile {\\n  position: relative;\\n  background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\\n  border-radius: 20px;\\n  overflow: hidden;\\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\\n  border: 3px solid #654321; \\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  aspect-ratio: 1; /* Quadratisch für Desktop */\\n  \\n  /* Anti-Flicker: Hardware-Beschleunigung */\\n  transform: translateZ(0);\\n  backface-visibility: hidden;\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform: translateZ(0);\\n  -moz-transform: translateZ(0);\\n  -ms-transform: translateZ(0);\\n  -o-transform: translateZ(0);\\n}\\n\\n/* Mobile-spezifische Anti-Flicker-Optimierungen */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .category-tile {\\n    /* Aggressive mobile Anti-Flicker-Maßnahmen */\\n    transform: translate3d(0, 0, 0);\\n    perspective: 1000px;\\n    -webkit-backface-visibility: hidden;\\n    backface-visibility: hidden;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    \\n    /* Verhindere Repaints */\\n    will-change: transform, opacity;\\n    contain: layout style paint;\\n    \\n    /* iOS Safari spezifische Fixes */\\n    -webkit-tap-highlight-color: transparent;\\n    -webkit-touch-callout: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n         user-select: none;\\n    \\n    /* Force Compositing Layer */\\n    isolation: isolate;\\n  }\\n  \\n  /* Mobile Image Anti-Flicker */\\n  .category-tile .category-image {\\n    transform: translate3d(0, 0, 0);\\n    -webkit-backface-visibility: hidden;\\n    backface-visibility: hidden;\\n    image-rendering: -webkit-optimize-contrast;\\n    image-rendering: crisp-edges;\\n    will-change: auto; /* Nur bei Tiles, nicht dauerhaft bei Images */\\n  }\\n  \\n  /* Deaktiviere Transitions während Animationen für Mobile */\\n  .category-tile[style*=\\\"transform\\\"] {\\n    transition: none !important;\\n  }\\n  \\n  /* Firefox Mobile spezifische Fixes */\\n  @supports (-moz-appearance: none) {\\n    .category-tile {\\n      /* Firefox spezifische Anti-Flicker-Maßnahmen */\\n      -moz-transform: translate3d(0, 0, 0);\\n      -moz-backface-visibility: hidden;\\n      -moz-perspective: 1000px;\\n      -moz-user-select: none;\\n      -moz-osx-font-smoothing: grayscale;\\n      \\n      /* Firefox Layer-Isolation */\\n      -moz-isolation: isolate;\\n      opacity: 0.999; /* Firefox Hack für Layer-Forcing */\\n    }\\n    \\n    .category-tile .category-image {\\n      -moz-transform: translate3d(0, 0, 0);\\n      -moz-backface-visibility: hidden;\\n      opacity: 0.999; /* Firefox Image-Layer-Hack */\\n    }\\n  }\\n}\\n\\n/* Geladene Tiles - normal sichtbar und interaktiv */\\n.category-tile.loaded {\\n  opacity: 1;\\n  transform: translateY(0) scale(1);\\n  pointer-events: auto;\\n}\\n\\n/* FLY-IN Animationen: Tiles kommen aus verschiedenen Richtungen */\\n.category-tile.fly-in-from-down {\\n  animation: flyInFromDown 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-up {\\n  animation: flyInFromUp 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-left {\\n  animation: flyInFromLeft 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-right {\\n  animation: flyInFromRight 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-up-left {\\n  animation: flyInFromUpLeft 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-up-right {\\n  animation: flyInFromUpRight 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-down-left {\\n  animation: flyInFromDownLeft 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-down-right {\\n  animation: flyInFromDownRight 0.8s ease-out forwards;\\n}\\n\\n/* FLY-IN KEYFRAMES */\\n@keyframes flyInFromDown {\\n  0% { opacity: 0; transform: translateY(120vh) translateX(0) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromUp {\\n  0% { opacity: 0; transform: translateY(-120vh) translateX(0) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromLeft {\\n  0% { opacity: 0; transform: translateY(0) translateX(-120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromRight {\\n  0% { opacity: 0; transform: translateY(0) translateX(120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromUpLeft {\\n  0% { opacity: 0; transform: translateY(-120vh) translateX(-120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromUpRight {\\n  0% { opacity: 0; transform: translateY(-120vh) translateX(120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromDownLeft {\\n  0% { opacity: 0; transform: translateY(120vh) translateX(-120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromDownRight {\\n  0% { opacity: 0; transform: translateY(120vh) translateX(120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n/* ===== ALLE TILE-ANIMATIONEN JETZT NUR ÜBER ANIMATION MANAGER ===== */\\n\\n/* Category Image */\\n.category-image {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  transition: transform 0.3s ease;\\n}\\n\\n/* Content wird nur bei Desktop angezeigt (versteckt für reine Bildkacheln) */\\n.category-content {\\n  display: none; /* Versteckt für reine Bild-Tiles */\\n}\\n\\n.category-title {\\n  display: none; /* Versteckt für reine Bild-Tiles */\\n}\\n\\n.category-description {\\n  display: none; /* Versteckt für reine Bild-Tiles */\\n}\\n\\n/* Legacy Animationen entfernt - neue Tile-Animation-System aktiv */\\n\\n\\n/* Character Container - wird durch Media Queries überschrieben */\\n.character-container {\\n  z-index: 1000;\\n  cursor: pointer;\\n  transition: transform 0.3s ease;\\n}\\n\\n.character-container:hover {\\n  transform: scale(1.05);\\n}\\n\\n.character-container:active {\\n  transform: scale(0.95);\\n}\\n\\n/* Character Image mit subtiler Loop-Animation */\\n.character-image {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));\\n  transition: transform 0.3s ease;\\n}\\n\\n/* Subtile Character Loop-Animation */\\n@keyframes characterSubtleMove {\\n  0%, 100% { \\n    transform: translateY(0) scaleY(1); \\n  }\\n  25% { \\n    transform: translateY(-2px) scaleY(1.01); \\n  }\\n  50% { \\n    transform: translateY(0) scaleY(1.02); \\n  }\\n  75% { \\n    transform: translateY(1px) scaleY(1.01); \\n  }\\n}\\n\\n.character-subtle-animation {\\n  animation: characterSubtleMove 4s ease-in-out infinite;\\n}\\n\\n/* Character Rotation Animation - Verbessert: Länger + gleichzeitig groß + drehen */\\n@keyframes characterRotateOut {\\n  0% { transform: rotateY(0deg) scale(1); }\\n  100% { transform: rotateY(90deg) scale(0.8); }\\n}\\n\\n@keyframes characterRotateIn {\\n  0% { transform: rotateY(90deg); } /* Startet da wo rotate-out aufhört */\\n  100% { transform: rotateY(0deg); } /* Dreht -90° zurück zur ursprünglichen Position */\\n}\\n\\n.character-rotate-out {\\n  animation: characterRotateOut 0.2s ease-in-out forwards; /* 200ms */\\n}\\n\\n.character-rotate-in {\\n  animation: characterRotateIn 0.2s ease-in-out forwards; /* 200ms */\\n}\\n\\n/* Character Fly-In Animation beim ersten Laden */\\n.character-fly-in {\\n  animation: characterFlyIn 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\\n}\\n\\n@keyframes characterFlyIn {\\n  0% { \\n    opacity: 0;\\n    transform: translateX(50px) scale(0.7) rotate(10deg);\\n  }\\n  100% { \\n    opacity: 1;\\n    transform: translateX(0) scale(1) rotate(0deg);\\n  }\\n}\\n\\n/* Entfernt: Veraltete Character Bounce und Breathing Animationen */\\n\\n/* Completion Badge für gehörte Einträge - VOLLSTÄNDIG TRANSPARENT */\\n.completion-badge {\\n  position: absolute;\\n  top: 8px;\\n  right: 8px;\\n  z-index: 10;\\n  background: none; /* Absolut kein Hintergrund */\\n  border-radius: 0; /* Kein runder Kreis */\\n  padding: 0; /* Kein Padding */\\n  box-shadow: none; /* Kein Schatten */\\n  animation: badgeBounce 0.6s ease-out;\\n  border: none; /* Kein Border */\\n}\\n\\n@keyframes badgeBounce {\\n  0% { \\n    transform: scale(0);\\n    opacity: 0;\\n  }\\n  60% { \\n    transform: scale(1.1);\\n    opacity: 1;\\n  }\\n  100% { \\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n/* Grüne Border für aktuell spielendes Tier - DIREKTER Border-Ersatz */\\n.category-tile.currently-playing {\\n  border: 4px solid #4caf50 !important;\\n  box-shadow: 0 0 15px rgba(76, 175, 80, 0.6), 0 8px 24px rgba(0, 0, 0, 0.1) !important;\\n  animation: playingPulse 1s ease-in-out infinite alternate;\\n}\\n\\n@keyframes playingPulse {\\n  0% { \\n    border-color: #4caf50 !important; \\n    box-shadow: 0 0 15px rgba(76, 175, 80, 0.8), 0 8px 24px rgba(0, 0, 0, 0.1) !important;\\n  }\\n  100% { \\n    border-color: #8bc34a !important; \\n    box-shadow: 0 0 25px rgba(139, 195, 74, 0.9), 0 8px 24px rgba(0, 0, 0, 0.1) !important;\\n  }\\n}\\n\\n/* Subkategorien Container */\\n.subcategories-container {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(255, 255, 255, 0.95);\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n  z-index: 900;\\n  overflow-y: auto;\\n}\\n\\n/* ENTFERNT - Verwenden jetzt .tile-grid für alle Grids */\\n\\n\\n/* Portrait Back Button */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .back-button {\\n    width: 70px;\\n    height: 70px;\\n    top: 0.5rem;\\n    left: 50%;\\n  }\\n  \\n  .back-button:hover {\\n    /* KEIN Transform beim Hover - nur Schatten-Verbesserung */\\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.4);\\n  }\\n  \\n  .back-button:active {\\n    transform: translateX(-50%) scale(0.95); /* Nur beim Klick etwas kleiner skalieren */\\n  }\\n}\\n\\n@media (max-width: 767px) and (orientation: landscape) {\\n  .back-button {\\n    width: 60px;\\n    height: 60px;\\n    top: 0.5rem;\\n    left: 50%;\\n    border: 2px solid #654321;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .back-button {\\n    width: 50px;\\n    height: 50px;\\n    top: 0.25rem;\\n    left: 50%;\\n    border: 2px solid #654321;\\n  }\\n}\\n\\n/* Scroll Indikator - Zwischen Tiles und Character - VERSTECKT */\\n.scroll-indicator {\\n  position: fixed;\\n  z-index: 999;\\n  background: rgba(0, 0, 0, 0.1);\\n  border-radius: 10px;\\n  transition: opacity 0.3s ease;\\n  display: none; /* Scrollbar verstecken */\\n}\\n\\n/* Desktop Scroll Indikator - zwischen Character und Categories */\\n@media (min-width: 768px) and (orientation: landscape) {\\n  .scroll-indicator {\\n    left: calc(20vw - 5px); /* LINKS: 1/5 für Character minus halbe Indikator-Breite */\\n    top: calc(120px + 2rem); /* Nach Header-Bereich */\\n    width: 10px;\\n    height: calc(100vh - 120px - 4rem); /* Rest-Höhe nach Header */\\n    transform: translateX(-50%); /* Links statt rechts */\\n  }\\n  \\n  .scroll-thumb {\\n    background: rgba(76, 175, 80, 0.5); /* Halb transparent */\\n    border-radius: 10px;\\n    width: 100%;\\n    min-height: 20px;\\n    transition: all 0.3s ease;\\n  }\\n}\\n\\n/* Portrait Scroll Indikator - rechts am Rand */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .scroll-indicator {\\n    right: 0.5rem;\\n    top: calc(80px + 100px + 1rem); /* Nach Header + Character + Padding */\\n    width: 6px;\\n    height: calc(100vh - 80px - 100px - 2rem);\\n  }\\n  \\n  .scroll-thumb {\\n    background: rgba(76, 175, 80, 0.5); /* Halb transparent */\\n    border-radius: 10px;\\n    width: 100%;\\n    min-height: 15px;\\n    transition: all 0.3s ease;\\n  }\\n}\\n\\n/* Loading Spinner */\\n.loading-spinner {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 50vh;\\n}\\n\\n.spinner {\\n  width: 40px;\\n  height: 40px;\\n  border: 4px solid #e0e0e0;\\n  border-top: 4px solid #4caf50;\\n  border-radius: 50%;\\n  animation: spin 1s linear infinite;\\n}\\n\\n@keyframes spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n\\n/* Error Message */\\n.error-message {\\n  text-align: center;\\n  color: #f44336;\\n  padding: 2rem;\\n  font-size: 1.1rem;\\n  background: #ffebee;\\n  border-radius: 10px;\\n  margin: 2rem;\\n}\\n\\n/* Responsive Adjustments */\\n@media (max-width: 480px) {\\n\\n  \\n  .category-tile {\\n    min-height: 200px;\\n  }\\n  \\n  .character-container {\\n    width: 100px;\\n    height: 125px;\\n    bottom: 1.5rem;\\n    right: 1rem;\\n  }\\n  \\n  .category-title {\\n    font-size: 1.1rem;\\n  }\\n  \\n  .category-description {\\n    font-size: 0.85rem;\\n  }\\n} \\n\\n/* Fehlende Fly-In Animationen - URSPRÜNGLICHE VERSION */\\n \\n/* LOADING-OVERLAY ENTFERNT */ \\n\\n/* Character Image Standard-Rendering für alle Geräte */\\n.character-image {\\n  /* Normales Image-Rendering ohne spezielle Optimierungen */\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n  object-position: center bottom;\\n  image-rendering: auto;\\n  -webkit-image-rendering: auto;\\n} \\n \\n/* Standard: Landscape (horizontal) - Bild füllt die Höhe */\\n.character-section::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n  background-size: auto 100%; /* Höhe füllen, links/rechts ggf. abgeschnitten */\\n  background-position: center bottom;\\n  z-index: 0;\\n}\\n\\n/* Portrait (vertical) - Bild füllt die Breite */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .character-section::before {\\n    background-size: 100% auto !important; /* Breite füllen, oben/unten ggf. abgeschnitten */\\n    background-position: center bottom !important;\\n  }\\n} \\n \\n/* Character Section Buttons Row */\\n.character-buttons-row {\\n  position: absolute;\\n  top: 1.25em;\\n  left: 0;\\n  right: 0;\\n  margin: 0 auto;\\n  width: 100%;\\n  height: clamp(40px, 12vw, 64px);\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  gap: 0.5em;\\n  z-index: 1020;\\n  background: none;\\n  pointer-events: auto;\\n  overflow-x: hidden;\\n  padding-left: 0.7em;\\n  padding-right: 0.7em;\\n}\\n\\n.back-button, .fullscreen-button, .info-button {\\n  border: none;\\n  box-shadow: none;\\n  border-radius: 50%;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  max-height: 64px;\\n  min-height: 32px;\\n  aspect-ratio: 1/1;\\n  margin: 0;\\n  background: none;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.back-button img, .fullscreen-button img, .info-button img {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n  border-radius: 50%;\\n  background: transparent;\\n  display: block;\\n}\\n\\n/* Remove all hover/active effects for mobile-first approach */\\n.back-button:hover, .fullscreen-button:hover, .info-button:hover,\\n.back-button:active, .fullscreen-button:active, .info-button:active {\\n  filter: none !important;\\n  transform: none !important;\\n  outline: none !important;\\n  box-shadow: none !important;\\n}\\n\\n@media (max-width: 767px), (orientation: portrait) {\\n  /* --- PORTRAIT/MOBILE BUTTON STYLES (ONLY BLOCK THAT SHOULD APPLY) --- */\\n  .character-section {\\n    padding-top: clamp(60px, 18vw, 96px);\\n  }\\n  .character-buttons-row {\\n    top: 1.5em;\\n    height: clamp(60px, 18vw, 96px);\\n    gap: 0.9em;\\n    padding-left: 0.7em;\\n    padding-right: 0.7em;\\n    display: flex;\\n    justify-content: flex-end;\\n    align-items: center;\\n  }\\n  .back-button, .fullscreen-button, .info-button {\\n    max-height: 96px;\\n    min-height: 48px;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .character-section {\\n    padding-top: clamp(48px, 14vw, 72px);\\n  }\\n  .character-buttons-row {\\n    height: clamp(48px, 14vw, 72px);\\n    padding-left: 0.5em;\\n    padding-right: 0.5em;\\n  }\\n  .back-button, .fullscreen-button, .info-button {\\n    max-height: 72px;\\n    min-height: 36px;\\n  }\\n}\\n\\n/* Remove any outline, border, or box-shadow from html, body, .container, .character-section */\\nhtml, body, .container, .character-section {\\n  outline: none !important;\\n  border: none !important;\\n  box-shadow: none !important;\\n}\\n\\n/* Info Overlay Modal */\\n.info-overlay-modal {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(255, 255, 255, 0.97);\\n  z-index: 2000;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  -webkit-backdrop-filter: blur(6px);\\n          backdrop-filter: blur(6px);\\n  animation: fadeInOverlay 0.3s;\\n}\\n\\n@keyframes fadeInOverlay {\\n  from { opacity: 0; }\\n  to { opacity: 1; }\\n}\\n\\n.info-overlay-content {\\n  background: #fffde7;\\n  border: 3px solid #654321;\\n  border-radius: 24px;\\n  box-shadow: 0 8px 32px rgba(0,0,0,0.18);\\n  max-width: 95vw;\\n  max-height: 90vh;\\n  padding: 2.5rem 2rem 2rem 2rem;\\n  overflow-y: auto;\\n  position: relative;\\n  font-size: 1.1rem;\\n  color: #333;\\n}\\n\\n.info-overlay-content h2 {\\n  margin-top: 0;\\n  font-size: 1.5rem;\\n  color: #b8860b;\\n  text-align: center;\\n}\\n\\n.info-overlay-content p {\\n  margin: 1.5rem 0 0 0;\\n  line-height: 1.7;\\n  font-size: 1.08rem;\\n}\\n\\n.info-overlay-content a {\\n  color: #1976d2;\\n  text-decoration: underline;\\n  word-break: break-all;\\n}\\n\\n.info-overlay-close {\\n  position: absolute;\\n  top: 1rem;\\n  right: 1.2rem;\\n  background: none;\\n  border: none;\\n  font-size: 2.2rem;\\n  color: #b8860b;\\n  cursor: pointer;\\n  z-index: 10;\\n  line-height: 1;\\n  padding: 0;\\n  transition: color 0.2s;\\n}\\n.info-overlay-close:hover {\\n  color: #ff9800;\\n} \\n \", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* Global Styles - Mobile First Design */\\n* {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nhtml,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n  background: linear-gradient(135deg, #e3f2fd 0%, #f1f8e9 100%);\\n  min-height: 100vh;\\n  overflow-x: hidden;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\nbutton {\\n  border: none;\\n  background: none;\\n  cursor: pointer;\\n  font-family: inherit;\\n}\\n\\n/* Main Layout Container - Responsive Design */\\n.container {\\n  width: 100vw;\\n  height: 100vh;\\n  overflow: hidden;\\n  position: relative;\\n  display: grid;\\n}\\n\\n/* Desktop Layout (Landscape) - Horizontal Layout */\\n@media (min-width: 768px) and (orientation: landscape) {\\n  .container {\\n    grid-template-columns: 1fr 4fr; /* 1/5 für Character, 4/5 für Tiles */\\n    grid-template-rows: 1fr;\\n    grid-template-areas:\\n      \\\"character categories\\\";\\n  }\\n  \\n  .character-section {\\n    grid-area: character;\\n    background-image: linear-gradient(135deg, #c8e6c9 0%, #81c784 100%);\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n    padding: 0.1rem 0.1rem 0 0.1rem;\\n    box-shadow: inset -2px 0 8px rgba(0, 0, 0, 0.1);\\n    border: 3px solid #654321;\\n    position: relative;\\n    overflow: hidden;\\n  }\\n  \\n  /* Baumhaus als separates pseudo-element für bessere Kontrolle */\\n  .character-section::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n    background-size: auto 100%; /* Höhe auf 100% fixiert, Breite automatisch */\\n    background-position: center bottom; /* Am unteren Rand verankert */\\n    z-index: 0;\\n  }\\n  \\n  .categories-section {\\n    grid-area: categories;\\n    background: url('/background.png') center/cover, linear-gradient(135deg, #f5f5f5 0%, #e8f5e8 100%);\\n    overflow-y: auto;\\n    padding: 2rem;\\n    padding-left: 1rem;\\n  }\\n  \\n  .character-container {\\n    position: relative !important;\\n    width: 100% !important;\\n    max-width: 400px !important;\\n    height: 500px !important;\\n    right: auto !important;\\n    top: auto !important;\\n    bottom: 10px !important;\\n    transform: none !important;\\n    margin-bottom: 0 !important;\\n    z-index: 1; /* Über dem Baumhaus */\\n  }\\n}\\n\\n/* Mobile Landscape - Speziell für Mobile Geräte im Landscape-Modus */\\n@media (max-width: 767px) and (orientation: landscape) {\\n  .container {\\n    grid-template-columns: 1fr 2fr; /* Gleiche horizontale Layout aber weniger Platz für Character */\\n    grid-template-rows: 1fr;\\n    grid-template-areas:\\n      \\\"character categories\\\";\\n    height: 100vh;\\n    overflow: hidden;\\n  }\\n  \\n  .character-section {\\n    grid-area: character;\\n    background-image: linear-gradient(135deg, #c8e6c9 0%, #81c784 100%);\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n    padding: 0.1rem 0.1rem 0 0.1rem;\\n    box-shadow: inset -2px 0 8px rgba(0, 0, 0, 0.1);\\n    border: 3px solid #654321;\\n    position: relative;\\n    max-height: 100vh;\\n    overflow: hidden;\\n  }\\n  \\n  /* Mobile Landscape Baumhaus */\\n  .character-section::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n    background-size: auto 100%; /* Höhe fixiert auf Container */\\n    background-position: center bottom;\\n    z-index: 0;\\n  }\\n  \\n  .categories-section {\\n    grid-area: categories;\\n    background: url('/background.png') center/cover, linear-gradient(135deg, #f5f5f5 0%, #e8f5e8 100%);\\n    overflow-y: auto;\\n    padding: 1rem;\\n    max-height: 100vh; /* Begrenzt die Höhe auf Viewport */\\n  }\\n  \\n  .character-container {\\n    position: relative !important;\\n    width: 100% !important;\\n    max-width: 250px !important; /* Noch kleinerer Character für Mobile Landscape */\\n    height: calc(100vh - 100px) !important; /* Mehr Puffer - weniger Höhe */\\n    max-height: 300px !important; /* Niedrigere Maximalhöhe */\\n    right: auto !important;\\n    top: auto !important;\\n    bottom: 5px !important;\\n    transform: none !important;\\n    margin-bottom: 0 !important;\\n    z-index: 1; /* Über dem Baumhaus */\\n  }\\n  \\n  /* Mobile Landscape: Kleinere Tiles */\\n  .tile-grid {\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr); /* 3 Spalten für Mobile Landscape */\\n    gap: 0.5rem;\\n    padding: 0.5rem;\\n  }\\n  \\n  .category-tile {\\n    width: 100px !important;\\n    height: 100px !important;\\n    min-width: 80px !important;\\n    min-height: 80px !important;\\n    max-width: 120px !important;\\n    max-height: 120px !important;\\n    aspect-ratio: 1 / 1 !important;\\n  }\\n}\\n\\n/* Portrait Layout (Mobile/Tablet) - Vertical Layout mit 50/50 Split */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .container {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 1fr 1fr; /* 50% oben für Character, 50% unten für Tiles */\\n    grid-template-areas:\\n      \\\"character\\\"\\n      \\\"categories\\\";\\n  }\\n  \\n  .character-section {\\n    grid-area: character;\\n    background-image: linear-gradient(135deg, #c8e6c9 0%, #81c784 100%);\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n    padding: 1rem 1rem 0 1rem;\\n    box-shadow: inset 0 -2px 8px rgba(0, 0, 0, 0.1);\\n    border: 3px solid #654321;\\n    position: relative;\\n    min-height: 0;\\n    overflow: hidden;\\n  }\\n  \\n  /* Portrait Baumhaus */\\n  .character-section::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n    background-size: auto 100%; /* Höhe auf Container fixiert */\\n    background-position: center bottom;\\n    z-index: 0;\\n  }\\n  \\n  .categories-section {\\n    grid-area: categories;\\n    background: url('/background.png') center/cover, linear-gradient(135deg, #f5f5f5 0%, #e8f5e8 100%);\\n    overflow-y: auto;\\n    padding: 1rem;\\n    min-height: 0;\\n  }\\n  \\n  .character-container {\\n    position: relative !important;\\n    width: 280px !important;\\n    height: 350px !important;\\n    right: auto !important;\\n    bottom: 0px !important; /* Direkt am Boden, kein Offset */\\n    top: auto !important;\\n    transform: none !important;\\n    margin-bottom: 0 !important;\\n    z-index: 1; /* Über dem Baumhaus */\\n  }\\n}\\n\\n/* ===== TILE GRID DEFINITIONS ===== */\\n\\n/* Desktop Landscape: Standard Multi-Column Grid */\\n@media (min-width: 768px) and (orientation: landscape) {\\n  .tile-grid {\\n    display: grid;\\n    gap: 1.5rem;\\n    padding-bottom: 2rem;\\n    grid-template-columns: repeat(4, 1fr); /* 4 Spalten für Desktop */\\n    max-width: none;\\n  }\\n  \\n  /* Kleinere Desktop Screens: 3 Spalten */\\n  @media (max-width: 1400px) {\\n    .tile-grid {\\n      grid-template-columns: repeat(3, 1fr);\\n    }\\n  }\\n}\\n\\n/* Portrait: 2 Tiles nebeneinander - kleinere Margins */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .tile-grid {\\n    display: grid;\\n    grid-template-columns: repeat(2, 1fr);/* 2 Spalten nebeneinander */\\n    gap: 0.5rem; /* Kleinerer Gap für mehr Platz */\\n    justify-items: center; /* Tiles in Spalten zentriert */\\n  }\\n  \\n  /* Portrait Tiles: Automatische Skalierung mit kleineren Margins */\\n  .category-tile {\\n    width: calc((100vw - 2rem) / 2) !important; /* Angepasst für kleinere Margins: (100% - 1rem padding + 0.5rem gap) / 2 */\\n    height: calc((100vw - 2rem) / 2) !important; /* Gleiche Höhe für Quadrat */\\n    min-width: 140px !important; /* Mindestgröße für sehr kleine Screens */\\n    min-height: 140px !important;\\n    max-width: 200px !important; /* Maximalgröße für sehr große Tablets */\\n    max-height: 200px !important;\\n    aspect-ratio: 1 / 1 !important; /* Perfektes 1:1 Verhältnis */\\n    display: block;\\n    border-radius: 20px;\\n    margin: 0;\\n    flex-shrink: 0;\\n    flex-grow: 0;\\n  }\\n  \\n  /* Portrait: Content verstecken - nur Bilder wie Desktop */\\n  .category-tile .category-content {\\n    display: none !important; /* Kein Text im Portrait - nur Bilder */\\n  }\\n  \\n  /* Portrait: Bild füllt komplettes Tile */\\n  .category-tile .category-image {\\n    width: 100% !important;\\n    height: 100% !important;\\n    object-fit: cover;\\n    border-radius: inherit;\\n  }\\n}\\n\\n/* Kategorie Tile Styles - Standard für Desktop */\\n.category-tile {\\n  position: relative;\\n  background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\\n  border-radius: 20px;\\n  overflow: hidden;\\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\\n  border: 3px solid #654321; \\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  aspect-ratio: 1; /* Quadratisch für Desktop */\\n  \\n  /* Anti-Flicker: Hardware-Beschleunigung */\\n  transform: translateZ(0);\\n  backface-visibility: hidden;\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform: translateZ(0);\\n  -moz-transform: translateZ(0);\\n  -ms-transform: translateZ(0);\\n  -o-transform: translateZ(0);\\n}\\n\\n/* Mobile-spezifische Anti-Flicker-Optimierungen */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .category-tile {\\n    /* Aggressive mobile Anti-Flicker-Maßnahmen */\\n    -webkit-transform: translate3d(0, 0, 0);\\n    -moz-transform: translate3d(0, 0, 0);\\n    transform: translate3d(0, 0, 0);\\n    -webkit-perspective: 1000px;\\n    perspective: 1000px;\\n    -webkit-backface-visibility: hidden;\\n    backface-visibility: hidden;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    \\n    /* Verhindere Repaints */\\n    will-change: transform, opacity;\\n    contain: layout style paint;\\n    \\n    /* iOS Safari spezifische Fixes */\\n    -webkit-tap-highlight-color: transparent;\\n    -webkit-touch-callout: none;\\n    -webkit-user-select: none;\\n    user-select: none;\\n    \\n    /* Force Compositing Layer */\\n    isolation: isolate;\\n  }\\n  \\n  /* Mobile Image Anti-Flicker */\\n  .category-tile .category-image {\\n    -webkit-transform: translate3d(0, 0, 0);\\n    transform: translate3d(0, 0, 0);\\n    -webkit-backface-visibility: hidden;\\n    backface-visibility: hidden;\\n    image-rendering: -webkit-optimize-contrast;\\n    image-rendering: crisp-edges;\\n    will-change: auto; /* Nur bei Tiles, nicht dauerhaft bei Images */\\n  }\\n  \\n  /* Deaktiviere Transitions während Animationen für Mobile */\\n  .category-tile[style*=\\\"transform\\\"] {\\n    transition: none !important;\\n  }\\n  \\n  /* Firefox Mobile spezifische Fixes */\\n  @supports (-moz-appearance: none) {\\n    .category-tile {\\n      /* Firefox spezifische Anti-Flicker-Maßnahmen */\\n      -moz-transform: translate3d(0, 0, 0);\\n      -moz-backface-visibility: hidden;\\n      -moz-perspective: 1000px;\\n      -moz-user-select: none;\\n      -moz-osx-font-smoothing: grayscale;\\n      \\n      /* Firefox Layer-Isolation */\\n      -moz-isolation: isolate;\\n      opacity: 0.999; /* Firefox Hack für Layer-Forcing */\\n    }\\n    \\n    .category-tile .category-image {\\n      -moz-transform: translate3d(0, 0, 0);\\n      -moz-backface-visibility: hidden;\\n      opacity: 0.999; /* Firefox Image-Layer-Hack */\\n    }\\n  }\\n}\\n\\n/* Geladene Tiles - normal sichtbar und interaktiv */\\n.category-tile.loaded {\\n  opacity: 1;\\n  transform: translateY(0) scale(1);\\n  pointer-events: auto;\\n}\\n\\n/* FLY-IN Animationen: Tiles kommen aus verschiedenen Richtungen */\\n.category-tile.fly-in-from-down {\\n  animation: flyInFromDown 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-up {\\n  animation: flyInFromUp 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-left {\\n  animation: flyInFromLeft 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-right {\\n  animation: flyInFromRight 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-up-left {\\n  animation: flyInFromUpLeft 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-up-right {\\n  animation: flyInFromUpRight 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-down-left {\\n  animation: flyInFromDownLeft 0.8s ease-out forwards;\\n}\\n\\n.category-tile.fly-in-from-down-right {\\n  animation: flyInFromDownRight 0.8s ease-out forwards;\\n}\\n\\n/* FLY-IN KEYFRAMES */\\n@keyframes flyInFromDown {\\n  0% { opacity: 0; transform: translateY(120vh) translateX(0) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromUp {\\n  0% { opacity: 0; transform: translateY(-120vh) translateX(0) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromLeft {\\n  0% { opacity: 0; transform: translateY(0) translateX(-120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromRight {\\n  0% { opacity: 0; transform: translateY(0) translateX(120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromUpLeft {\\n  0% { opacity: 0; transform: translateY(-120vh) translateX(-120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromUpRight {\\n  0% { opacity: 0; transform: translateY(-120vh) translateX(120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromDownLeft {\\n  0% { opacity: 0; transform: translateY(120vh) translateX(-120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n@keyframes flyInFromDownRight {\\n  0% { opacity: 0; transform: translateY(120vh) translateX(120vw) scale(0.8); }\\n  100% { opacity: 1; transform: translateY(0) translateX(0) scale(1); }\\n}\\n\\n/* ===== ALLE TILE-ANIMATIONEN JETZT NUR ÜBER ANIMATION MANAGER ===== */\\n\\n/* Category Image */\\n.category-image {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  transition: transform 0.3s ease;\\n}\\n\\n/* Content wird nur bei Desktop angezeigt (versteckt für reine Bildkacheln) */\\n.category-content {\\n  display: none; /* Versteckt für reine Bild-Tiles */\\n}\\n\\n.category-title {\\n  display: none; /* Versteckt für reine Bild-Tiles */\\n}\\n\\n.category-description {\\n  display: none; /* Versteckt für reine Bild-Tiles */\\n}\\n\\n/* Legacy Animationen entfernt - neue Tile-Animation-System aktiv */\\n\\n\\n/* Character Container - wird durch Media Queries überschrieben */\\n.character-container {\\n  z-index: 1000;\\n  cursor: pointer;\\n  transition: transform 0.3s ease;\\n}\\n\\n.character-container:hover {\\n  transform: scale(1.05);\\n}\\n\\n.character-container:active {\\n  transform: scale(0.95);\\n}\\n\\n/* Character Image mit subtiler Loop-Animation */\\n.character-image {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));\\n  transition: transform 0.3s ease;\\n}\\n\\n/* Subtile Character Loop-Animation */\\n@keyframes characterSubtleMove {\\n  0%, 100% { \\n    transform: translateY(0) scaleY(1); \\n  }\\n  25% { \\n    transform: translateY(-2px) scaleY(1.01); \\n  }\\n  50% { \\n    transform: translateY(0) scaleY(1.02); \\n  }\\n  75% { \\n    transform: translateY(1px) scaleY(1.01); \\n  }\\n}\\n\\n.character-subtle-animation {\\n  animation: characterSubtleMove 4s ease-in-out infinite;\\n}\\n\\n/* Character Rotation Animation - Verbessert: Länger + gleichzeitig groß + drehen */\\n@keyframes characterRotateOut {\\n  0% { transform: rotateY(0deg) scale(1); }\\n  100% { transform: rotateY(90deg) scale(0.8); }\\n}\\n\\n@keyframes characterRotateIn {\\n  0% { transform: rotateY(90deg); } /* Startet da wo rotate-out aufhört */\\n  100% { transform: rotateY(0deg); } /* Dreht -90° zurück zur ursprünglichen Position */\\n}\\n\\n.character-rotate-out {\\n  animation: characterRotateOut 0.2s ease-in-out forwards; /* 200ms */\\n}\\n\\n.character-rotate-in {\\n  animation: characterRotateIn 0.2s ease-in-out forwards; /* 200ms */\\n}\\n\\n/* Character Fly-In Animation beim ersten Laden */\\n.character-fly-in {\\n  animation: characterFlyIn 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\\n}\\n\\n@keyframes characterFlyIn {\\n  0% { \\n    opacity: 0;\\n    transform: translateX(50px) scale(0.7) rotate(10deg);\\n  }\\n  100% { \\n    opacity: 1;\\n    transform: translateX(0) scale(1) rotate(0deg);\\n  }\\n}\\n\\n/* Entfernt: Veraltete Character Bounce und Breathing Animationen */\\n\\n/* Completion Badge für gehörte Einträge - VOLLSTÄNDIG TRANSPARENT */\\n.completion-badge {\\n  position: absolute;\\n  top: 8px;\\n  right: 8px;\\n  z-index: 10;\\n  background: none; /* Absolut kein Hintergrund */\\n  border-radius: 0; /* Kein runder Kreis */\\n  padding: 0; /* Kein Padding */\\n  box-shadow: none; /* Kein Schatten */\\n  animation: badgeBounce 0.6s ease-out;\\n  border: none; /* Kein Border */\\n}\\n\\n@keyframes badgeBounce {\\n  0% { \\n    transform: scale(0);\\n    opacity: 0;\\n  }\\n  60% { \\n    transform: scale(1.1);\\n    opacity: 1;\\n  }\\n  100% { \\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n/* Grüne Border für aktuell spielendes Tier - DIREKTER Border-Ersatz */\\n.category-tile.currently-playing {\\n  border: 4px solid #4caf50 !important;\\n  box-shadow: 0 0 15px rgba(76, 175, 80, 0.6), 0 8px 24px rgba(0, 0, 0, 0.1) !important;\\n  animation: playingPulse 1s ease-in-out infinite alternate;\\n}\\n\\n@keyframes playingPulse {\\n  0% { \\n    border-color: #4caf50 !important; \\n    box-shadow: 0 0 15px rgba(76, 175, 80, 0.8), 0 8px 24px rgba(0, 0, 0, 0.1) !important;\\n  }\\n  100% { \\n    border-color: #8bc34a !important; \\n    box-shadow: 0 0 25px rgba(139, 195, 74, 0.9), 0 8px 24px rgba(0, 0, 0, 0.1) !important;\\n  }\\n}\\n\\n/* Subkategorien Container */\\n.subcategories-container {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(255, 255, 255, 0.95);\\n  backdrop-filter: blur(10px);\\n  z-index: 900;\\n  overflow-y: auto;\\n}\\n\\n/* ENTFERNT - Verwenden jetzt .tile-grid für alle Grids */\\n\\n\\n/* Portrait Back Button */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .back-button {\\n    width: 70px;\\n    height: 70px;\\n    top: 0.5rem;\\n    left: 50%;\\n  }\\n  \\n  .back-button:hover {\\n    /* KEIN Transform beim Hover - nur Schatten-Verbesserung */\\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.4);\\n  }\\n  \\n  .back-button:active {\\n    transform: translateX(-50%) scale(0.95); /* Nur beim Klick etwas kleiner skalieren */\\n  }\\n}\\n\\n@media (max-width: 767px) and (orientation: landscape) {\\n  .back-button {\\n    width: 60px;\\n    height: 60px;\\n    top: 0.5rem;\\n    left: 50%;\\n    border: 2px solid #654321;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .back-button {\\n    width: 50px;\\n    height: 50px;\\n    top: 0.25rem;\\n    left: 50%;\\n    border: 2px solid #654321;\\n  }\\n}\\n\\n/* Scroll Indikator - Zwischen Tiles und Character - VERSTECKT */\\n.scroll-indicator {\\n  position: fixed;\\n  z-index: 999;\\n  background: rgba(0, 0, 0, 0.1);\\n  border-radius: 10px;\\n  transition: opacity 0.3s ease;\\n  display: none; /* Scrollbar verstecken */\\n}\\n\\n/* Desktop Scroll Indikator - zwischen Character und Categories */\\n@media (min-width: 768px) and (orientation: landscape) {\\n  .scroll-indicator {\\n    left: calc(20vw - 5px); /* LINKS: 1/5 für Character minus halbe Indikator-Breite */\\n    top: calc(120px + 2rem); /* Nach Header-Bereich */\\n    width: 10px;\\n    height: calc(100vh - 120px - 4rem); /* Rest-Höhe nach Header */\\n    transform: translateX(-50%); /* Links statt rechts */\\n  }\\n  \\n  .scroll-thumb {\\n    background: rgba(76, 175, 80, 0.5); /* Halb transparent */\\n    border-radius: 10px;\\n    width: 100%;\\n    min-height: 20px;\\n    transition: all 0.3s ease;\\n  }\\n}\\n\\n/* Portrait Scroll Indikator - rechts am Rand */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .scroll-indicator {\\n    right: 0.5rem;\\n    top: calc(80px + 100px + 1rem); /* Nach Header + Character + Padding */\\n    width: 6px;\\n    height: calc(100vh - 80px - 100px - 2rem);\\n  }\\n  \\n  .scroll-thumb {\\n    background: rgba(76, 175, 80, 0.5); /* Halb transparent */\\n    border-radius: 10px;\\n    width: 100%;\\n    min-height: 15px;\\n    transition: all 0.3s ease;\\n  }\\n}\\n\\n/* Loading Spinner */\\n.loading-spinner {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 50vh;\\n}\\n\\n.spinner {\\n  width: 40px;\\n  height: 40px;\\n  border: 4px solid #e0e0e0;\\n  border-top: 4px solid #4caf50;\\n  border-radius: 50%;\\n  animation: spin 1s linear infinite;\\n}\\n\\n@keyframes spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n\\n/* Error Message */\\n.error-message {\\n  text-align: center;\\n  color: #f44336;\\n  padding: 2rem;\\n  font-size: 1.1rem;\\n  background: #ffebee;\\n  border-radius: 10px;\\n  margin: 2rem;\\n}\\n\\n/* Responsive Adjustments */\\n@media (max-width: 480px) {\\n\\n  \\n  .category-tile {\\n    min-height: 200px;\\n  }\\n  \\n  .character-container {\\n    width: 100px;\\n    height: 125px;\\n    bottom: 1.5rem;\\n    right: 1rem;\\n  }\\n  \\n  .category-title {\\n    font-size: 1.1rem;\\n  }\\n  \\n  .category-description {\\n    font-size: 0.85rem;\\n  }\\n} \\n\\n/* Fehlende Fly-In Animationen - URSPRÜNGLICHE VERSION */\\n \\n/* LOADING-OVERLAY ENTFERNT */ \\n\\n/* Character Image Standard-Rendering für alle Geräte */\\n.character-image {\\n  /* Normales Image-Rendering ohne spezielle Optimierungen */\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n  object-position: center bottom;\\n  image-rendering: auto;\\n  -webkit-image-rendering: auto;\\n} \\n \\n/* Standard: Landscape (horizontal) - Bild füllt die Höhe */\\n.character-section::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: url('/websiteBaseImages/Baumhaus.png') no-repeat;\\n  background-size: auto 100%; /* Höhe füllen, links/rechts ggf. abgeschnitten */\\n  background-position: center bottom;\\n  z-index: 0;\\n}\\n\\n/* Portrait (vertical) - Bild füllt die Breite */\\n@media (max-width: 767px), (orientation: portrait) {\\n  .character-section::before {\\n    background-size: 100% auto !important; /* Breite füllen, oben/unten ggf. abgeschnitten */\\n    background-position: center bottom !important;\\n  }\\n} \\n \\n/* Character Section Buttons Row */\\n.character-buttons-row {\\n  position: absolute;\\n  top: 1.25em;\\n  left: 0;\\n  right: 0;\\n  margin: 0 auto;\\n  width: 100%;\\n  height: clamp(40px, 12vw, 64px);\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  gap: 0.5em;\\n  z-index: 1020;\\n  background: none;\\n  pointer-events: auto;\\n  overflow-x: hidden;\\n  padding-left: 0.7em;\\n  padding-right: 0.7em;\\n}\\n\\n.back-button, .fullscreen-button, .info-button {\\n  border: none;\\n  box-shadow: none;\\n  border-radius: 50%;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  max-height: 64px;\\n  min-height: 32px;\\n  aspect-ratio: 1/1;\\n  margin: 0;\\n  background: none;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.back-button img, .fullscreen-button img, .info-button img {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n  border-radius: 50%;\\n  background: transparent;\\n  display: block;\\n}\\n\\n/* Remove all hover/active effects for mobile-first approach */\\n.back-button:hover, .fullscreen-button:hover, .info-button:hover,\\n.back-button:active, .fullscreen-button:active, .info-button:active {\\n  filter: none !important;\\n  transform: none !important;\\n  outline: none !important;\\n  box-shadow: none !important;\\n}\\n\\n@media (max-width: 767px), (orientation: portrait) {\\n  /* --- PORTRAIT/MOBILE BUTTON STYLES (ONLY BLOCK THAT SHOULD APPLY) --- */\\n  .character-section {\\n    padding-top: clamp(60px, 18vw, 96px);\\n  }\\n  .character-buttons-row {\\n    top: 1.5em;\\n    height: clamp(60px, 18vw, 96px);\\n    gap: 0.9em;\\n    padding-left: 0.7em;\\n    padding-right: 0.7em;\\n    display: flex;\\n    justify-content: flex-end;\\n    align-items: center;\\n  }\\n  .back-button, .fullscreen-button, .info-button {\\n    max-height: 96px;\\n    min-height: 48px;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .character-section {\\n    padding-top: clamp(48px, 14vw, 72px);\\n  }\\n  .character-buttons-row {\\n    height: clamp(48px, 14vw, 72px);\\n    padding-left: 0.5em;\\n    padding-right: 0.5em;\\n  }\\n  .back-button, .fullscreen-button, .info-button {\\n    max-height: 72px;\\n    min-height: 36px;\\n  }\\n}\\n\\n/* Remove any outline, border, or box-shadow from html, body, .container, .character-section */\\nhtml, body, .container, .character-section {\\n  outline: none !important;\\n  border: none !important;\\n  box-shadow: none !important;\\n}\\n\\n/* Info Overlay Modal */\\n.info-overlay-modal {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(255, 255, 255, 0.97);\\n  z-index: 2000;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  backdrop-filter: blur(6px);\\n  animation: fadeInOverlay 0.3s;\\n}\\n\\n@keyframes fadeInOverlay {\\n  from { opacity: 0; }\\n  to { opacity: 1; }\\n}\\n\\n.info-overlay-content {\\n  background: #fffde7;\\n  border: 3px solid #654321;\\n  border-radius: 24px;\\n  box-shadow: 0 8px 32px rgba(0,0,0,0.18);\\n  max-width: 95vw;\\n  max-height: 90vh;\\n  padding: 2.5rem 2rem 2rem 2rem;\\n  overflow-y: auto;\\n  position: relative;\\n  font-size: 1.1rem;\\n  color: #333;\\n}\\n\\n.info-overlay-content h2 {\\n  margin-top: 0;\\n  font-size: 1.5rem;\\n  color: #b8860b;\\n  text-align: center;\\n}\\n\\n.info-overlay-content p {\\n  margin: 1.5rem 0 0 0;\\n  line-height: 1.7;\\n  font-size: 1.08rem;\\n}\\n\\n.info-overlay-content a {\\n  color: #1976d2;\\n  text-decoration: underline;\\n  word-break: break-all;\\n}\\n\\n.info-overlay-close {\\n  position: absolute;\\n  top: 1rem;\\n  right: 1.2rem;\\n  background: none;\\n  border: none;\\n  font-size: 2.2rem;\\n  color: #b8860b;\\n  cursor: pointer;\\n  z-index: 10;\\n  line-height: 1;\\n  padding: 0;\\n  transition: color 0.2s;\\n}\\n.info-overlay-close:hover {\\n  color: #ff9800;\\n} \\n \"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG9OQUF3RztBQUMxSCwwQkFBMEIsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRW5SOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwyZUFBaVA7QUFDdlA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRTNROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz83MGE0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxNF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxNF0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzE0XS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTRdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTRdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./components/FaviconManager.js":
/*!**************************************!*\
  !*** ./components/FaviconManager.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FaviconManager; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_imageCache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/imageCache */ \"./utils/imageCache.js\");\nvar _s = $RefreshSig$();\n\n\nfunction FaviconManager() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        (async ()=>{\n            try {\n                var _document_getElementById, _document_getElementById1, _document_getElementById2;\n                const base64 = await (0,_utils_imageCache__WEBPACK_IMPORTED_MODULE_1__.getCachedImage)(\"/websiteBaseImages/lexiconFavIcon.png\");\n                (_document_getElementById = document.getElementById(\"dynamic-favicon\")) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.setAttribute(\"href\", base64);\n                (_document_getElementById1 = document.getElementById(\"dynamic-appleicon\")) === null || _document_getElementById1 === void 0 ? void 0 : _document_getElementById1.setAttribute(\"href\", base64);\n                (_document_getElementById2 = document.getElementById(\"dynamic-shortcuticon\")) === null || _document_getElementById2 === void 0 ? void 0 : _document_getElementById2.setAttribute(\"href\", base64);\n            } catch (e) {\n            // fallback: do nothing\n            }\n        })();\n    }, []);\n    return null;\n}\n_s(FaviconManager, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FaviconManager;\nvar _c;\n$RefreshReg$(_c, \"FaviconManager\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Zhdmljb25NYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtDO0FBQ21CO0FBRXRDLFNBQVNFOztJQUN0QkYsZ0RBQVNBLENBQUM7UUFDUDtZQUNDLElBQUk7b0JBRUZHLDBCQUNBQSwyQkFDQUE7Z0JBSEEsTUFBTUMsU0FBUyxNQUFNSCxpRUFBY0EsQ0FBQztpQkFDcENFLDJCQUFBQSxTQUFTRSxjQUFjLENBQUMsZ0NBQXhCRiwrQ0FBQUEseUJBQTRDRyxZQUFZLENBQUMsUUFBUUY7aUJBQ2pFRCw0QkFBQUEsU0FBU0UsY0FBYyxDQUFDLGtDQUF4QkYsZ0RBQUFBLDBCQUE4Q0csWUFBWSxDQUFDLFFBQVFGO2lCQUNuRUQsNEJBQUFBLFNBQVNFLGNBQWMsQ0FBQyxxQ0FBeEJGLGdEQUFBQSwwQkFBaURHLFlBQVksQ0FBQyxRQUFRRjtZQUN4RSxFQUFFLE9BQU9HLEdBQUc7WUFDVix1QkFBdUI7WUFDekI7UUFDRjtJQUNGLEdBQUcsRUFBRTtJQUNMLE9BQU87QUFDVDtHQWR3Qkw7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9GYXZpY29uTWFuYWdlci5qcz83OTNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgZ2V0Q2FjaGVkSW1hZ2UgfSBmcm9tICcuLi91dGlscy9pbWFnZUNhY2hlJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZhdmljb25NYW5hZ2VyKCkge1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAoYXN5bmMgKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGJhc2U2NCA9IGF3YWl0IGdldENhY2hlZEltYWdlKCcvd2Vic2l0ZUJhc2VJbWFnZXMvbGV4aWNvbkZhdkljb24ucG5nJyk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R5bmFtaWMtZmF2aWNvbicpPy5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBiYXNlNjQpO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkeW5hbWljLWFwcGxlaWNvbicpPy5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBiYXNlNjQpO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkeW5hbWljLXNob3J0Y3V0aWNvbicpPy5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBiYXNlNjQpO1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgLy8gZmFsbGJhY2s6IGRvIG5vdGhpbmdcclxuICAgICAgfVxyXG4gICAgfSkoKTtcclxuICB9LCBbXSk7XHJcbiAgcmV0dXJuIG51bGw7XHJcbn0gIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsImdldENhY2hlZEltYWdlIiwiRmF2aWNvbk1hbmFnZXIiLCJkb2N1bWVudCIsImJhc2U2NCIsImdldEVsZW1lbnRCeUlkIiwic2V0QXR0cmlidXRlIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/FaviconManager.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_FaviconManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/FaviconManager */ \"./components/FaviconManager.js\");\n\n\n\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_FaviconManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\_app.js\",\n                lineNumber: 7,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\_app.js\",\n                lineNumber: 8,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0I7QUFDMkI7QUFFMUQsU0FBU0MsTUFBTSxLQUF3QjtRQUF4QixFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUF4QjtJQUNiLHFCQUNFOzswQkFDRSw4REFBQ0gsa0VBQWNBOzs7OzswQkFDZiw4REFBQ0U7Z0JBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7QUFHOUI7S0FQU0Y7QUFTVCwrREFBZUEsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9fYXBwLmpzP2UwYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuaW1wb3J0IEZhdmljb25NYW5hZ2VyIGZyb20gJy4uL2NvbXBvbmVudHMvRmF2aWNvbk1hbmFnZXInO1xuXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEZhdmljb25NYW5hZ2VyIC8+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwOyAiXSwibmFtZXMiOlsiRmF2aWNvbk1hbmFnZXIiLCJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./utils/imageCache.js":
/*!*****************************!*\
  !*** ./utils/imageCache.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCachedImage: function() { return /* binding */ clearCachedImage; },\n/* harmony export */   getCachedImage: function() { return /* binding */ getCachedImage; }\n/* harmony export */ });\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! idb-keyval */ \"./node_modules/idb-keyval/dist/index.js\");\n\n// Image Cache Utility for Base64-Caching in Local Storage with 7-day expiry\nconst DEFAULT_EXPIRY_DAYS = 7;\nfunction getCacheKey(url) {\n    let version = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n    return \"imgcache_\".concat(url, \"_\").concat(version);\n}\nfunction getExpiryKey(url) {\n    let version = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n    return \"imgcache_expiry_\".concat(url, \"_\").concat(version);\n}\nasync function getCachedImage(url) {\n    let version = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", expiryDays = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : DEFAULT_EXPIRY_DAYS;\n    const cacheKey = getCacheKey(url, version);\n    const expiryKey = getExpiryKey(url, version);\n    const now = Date.now();\n    try {\n        const expiry = await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.get)(expiryKey);\n        if (expiry && parseInt(expiry, 10) > now) {\n            const cached = await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.get)(cacheKey);\n            if (cached) return cached;\n        } else {\n            // Expired: Clean up\n            await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.del)(cacheKey);\n            await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.del)(expiryKey);\n        }\n    } catch (e) {\n        // IndexedDB may be unavailable\n        console.warn(\"ImageCache: IndexedDB not available\", e);\n    }\n    // Fetch and cache image as Base64\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(\"Image download failed: \" + url);\n    const blob = await response.blob();\n    const base64 = await new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onloadend = ()=>resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n    try {\n        await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.set)(cacheKey, base64);\n        await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.set)(expiryKey, (now + expiryDays * 24 * 60 * 60 * 1000).toString());\n    } catch (e) {\n        // IndexedDB full or error\n        console.warn(\"ImageCache: IndexedDB full or error, cannot cache image\", e);\n    }\n    return base64;\n}\nasync function clearCachedImage(url) {\n    let version = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n    const cacheKey = getCacheKey(url, version);\n    const expiryKey = getExpiryKey(url, version);\n    await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.del)(cacheKey);\n    await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_0__.del)(expiryKey);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9pbWFnZUNhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUUzQyw0RUFBNEU7QUFDNUUsTUFBTUcsc0JBQXNCO0FBRTVCLFNBQVNDLFlBQVlDLEdBQUc7UUFBRUMsVUFBQUEsaUVBQVU7SUFDbEMsT0FBTyxZQUFtQkEsT0FBUEQsS0FBSSxLQUFXLE9BQVJDO0FBQzVCO0FBRUEsU0FBU0MsYUFBYUYsR0FBRztRQUFFQyxVQUFBQSxpRUFBVTtJQUNuQyxPQUFPLG1CQUEwQkEsT0FBUEQsS0FBSSxLQUFXLE9BQVJDO0FBQ25DO0FBRU8sZUFBZUUsZUFBZUgsR0FBRztRQUFFQyxVQUFBQSxpRUFBVSxJQUFJRyxhQUFBQSxpRUFBYU47SUFDbkUsTUFBTU8sV0FBV04sWUFBWUMsS0FBS0M7SUFDbEMsTUFBTUssWUFBWUosYUFBYUYsS0FBS0M7SUFDcEMsTUFBTU0sTUFBTUMsS0FBS0QsR0FBRztJQUVwQixJQUFJO1FBQ0YsTUFBTUUsU0FBUyxNQUFNYiwrQ0FBR0EsQ0FBQ1U7UUFDekIsSUFBSUcsVUFBVUMsU0FBU0QsUUFBUSxNQUFNRixLQUFLO1lBQ3hDLE1BQU1JLFNBQVMsTUFBTWYsK0NBQUdBLENBQUNTO1lBQ3pCLElBQUlNLFFBQVEsT0FBT0E7UUFDckIsT0FBTztZQUNMLG9CQUFvQjtZQUNwQixNQUFNZCwrQ0FBR0EsQ0FBQ1E7WUFDVixNQUFNUiwrQ0FBR0EsQ0FBQ1M7UUFDWjtJQUNGLEVBQUUsT0FBT00sR0FBRztRQUNWLCtCQUErQjtRQUMvQkMsUUFBUUMsSUFBSSxDQUFDLHVDQUF1Q0Y7SUFDdEQ7SUFFQSxrQ0FBa0M7SUFDbEMsTUFBTUcsV0FBVyxNQUFNQyxNQUFNaEI7SUFDN0IsSUFBSSxDQUFDZSxTQUFTRSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNLDRCQUE0QmxCO0lBQzlELE1BQU1tQixPQUFPLE1BQU1KLFNBQVNJLElBQUk7SUFDaEMsTUFBTUMsU0FBUyxNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7UUFDekMsTUFBTUMsU0FBUyxJQUFJQztRQUNuQkQsT0FBT0UsU0FBUyxHQUFHLElBQU1KLFFBQVFFLE9BQU9HLE1BQU07UUFDOUNILE9BQU9JLE9BQU8sR0FBR0w7UUFDakJDLE9BQU9LLGFBQWEsQ0FBQ1Y7SUFDdkI7SUFFQSxJQUFJO1FBQ0YsTUFBTXhCLCtDQUFHQSxDQUFDVSxVQUFVZTtRQUNwQixNQUFNekIsK0NBQUdBLENBQUNXLFdBQVcsQ0FBQ0MsTUFBTUgsYUFBYSxLQUFLLEtBQUssS0FBSyxJQUFHLEVBQUcwQixRQUFRO0lBQ3hFLEVBQUUsT0FBT2xCLEdBQUc7UUFDViwwQkFBMEI7UUFDMUJDLFFBQVFDLElBQUksQ0FBQywyREFBMkRGO0lBQzFFO0lBRUEsT0FBT1E7QUFDVDtBQUVPLGVBQWVXLGlCQUFpQi9CLEdBQUc7UUFBRUMsVUFBQUEsaUVBQVU7SUFDcEQsTUFBTUksV0FBV04sWUFBWUMsS0FBS0M7SUFDbEMsTUFBTUssWUFBWUosYUFBYUYsS0FBS0M7SUFDcEMsTUFBTUosK0NBQUdBLENBQUNRO0lBQ1YsTUFBTVIsK0NBQUdBLENBQUNTO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvaW1hZ2VDYWNoZS5qcz8yNGQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldCwgZ2V0LCBkZWwgfSBmcm9tICdpZGIta2V5dmFsJztcclxuXHJcbi8vIEltYWdlIENhY2hlIFV0aWxpdHkgZm9yIEJhc2U2NC1DYWNoaW5nIGluIExvY2FsIFN0b3JhZ2Ugd2l0aCA3LWRheSBleHBpcnlcclxuY29uc3QgREVGQVVMVF9FWFBJUllfREFZUyA9IDc7XHJcblxyXG5mdW5jdGlvbiBnZXRDYWNoZUtleSh1cmwsIHZlcnNpb24gPSAnJykge1xyXG4gIHJldHVybiBgaW1nY2FjaGVfJHt1cmx9XyR7dmVyc2lvbn1gO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRFeHBpcnlLZXkodXJsLCB2ZXJzaW9uID0gJycpIHtcclxuICByZXR1cm4gYGltZ2NhY2hlX2V4cGlyeV8ke3VybH1fJHt2ZXJzaW9ufWA7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDYWNoZWRJbWFnZSh1cmwsIHZlcnNpb24gPSAnJywgZXhwaXJ5RGF5cyA9IERFRkFVTFRfRVhQSVJZX0RBWVMpIHtcclxuICBjb25zdCBjYWNoZUtleSA9IGdldENhY2hlS2V5KHVybCwgdmVyc2lvbik7XHJcbiAgY29uc3QgZXhwaXJ5S2V5ID0gZ2V0RXhwaXJ5S2V5KHVybCwgdmVyc2lvbik7XHJcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGV4cGlyeSA9IGF3YWl0IGdldChleHBpcnlLZXkpO1xyXG4gICAgaWYgKGV4cGlyeSAmJiBwYXJzZUludChleHBpcnksIDEwKSA+IG5vdykge1xyXG4gICAgICBjb25zdCBjYWNoZWQgPSBhd2FpdCBnZXQoY2FjaGVLZXkpO1xyXG4gICAgICBpZiAoY2FjaGVkKSByZXR1cm4gY2FjaGVkO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gRXhwaXJlZDogQ2xlYW4gdXBcclxuICAgICAgYXdhaXQgZGVsKGNhY2hlS2V5KTtcclxuICAgICAgYXdhaXQgZGVsKGV4cGlyeUtleSk7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgLy8gSW5kZXhlZERCIG1heSBiZSB1bmF2YWlsYWJsZVxyXG4gICAgY29uc29sZS53YXJuKCdJbWFnZUNhY2hlOiBJbmRleGVkREIgbm90IGF2YWlsYWJsZScsIGUpO1xyXG4gIH1cclxuXHJcbiAgLy8gRmV0Y2ggYW5kIGNhY2hlIGltYWdlIGFzIEJhc2U2NFxyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0ltYWdlIGRvd25sb2FkIGZhaWxlZDogJyArIHVybCk7XHJcbiAgY29uc3QgYmxvYiA9IGF3YWl0IHJlc3BvbnNlLmJsb2IoKTtcclxuICBjb25zdCBiYXNlNjQgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgcmVhZGVyLm9ubG9hZGVuZCA9ICgpID0+IHJlc29sdmUocmVhZGVyLnJlc3VsdCk7XHJcbiAgICByZWFkZXIub25lcnJvciA9IHJlamVjdDtcclxuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGJsb2IpO1xyXG4gIH0pO1xyXG5cclxuICB0cnkge1xyXG4gICAgYXdhaXQgc2V0KGNhY2hlS2V5LCBiYXNlNjQpO1xyXG4gICAgYXdhaXQgc2V0KGV4cGlyeUtleSwgKG5vdyArIGV4cGlyeURheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKS50b1N0cmluZygpKTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICAvLyBJbmRleGVkREIgZnVsbCBvciBlcnJvclxyXG4gICAgY29uc29sZS53YXJuKCdJbWFnZUNhY2hlOiBJbmRleGVkREIgZnVsbCBvciBlcnJvciwgY2Fubm90IGNhY2hlIGltYWdlJywgZSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gYmFzZTY0O1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2xlYXJDYWNoZWRJbWFnZSh1cmwsIHZlcnNpb24gPSAnJykge1xyXG4gIGNvbnN0IGNhY2hlS2V5ID0gZ2V0Q2FjaGVLZXkodXJsLCB2ZXJzaW9uKTtcclxuICBjb25zdCBleHBpcnlLZXkgPSBnZXRFeHBpcnlLZXkodXJsLCB2ZXJzaW9uKTtcclxuICBhd2FpdCBkZWwoY2FjaGVLZXkpO1xyXG4gIGF3YWl0IGRlbChleHBpcnlLZXkpO1xyXG59ICJdLCJuYW1lcyI6WyJzZXQiLCJnZXQiLCJkZWwiLCJERUZBVUxUX0VYUElSWV9EQVlTIiwiZ2V0Q2FjaGVLZXkiLCJ1cmwiLCJ2ZXJzaW9uIiwiZ2V0RXhwaXJ5S2V5IiwiZ2V0Q2FjaGVkSW1hZ2UiLCJleHBpcnlEYXlzIiwiY2FjaGVLZXkiLCJleHBpcnlLZXkiLCJub3ciLCJEYXRlIiwiZXhwaXJ5IiwicGFyc2VJbnQiLCJjYWNoZWQiLCJlIiwiY29uc29sZSIsIndhcm4iLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImJsb2IiLCJiYXNlNjQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWRlbmQiLCJyZXN1bHQiLCJvbmVycm9yIiwicmVhZEFzRGF0YVVSTCIsInRvU3RyaW5nIiwiY2xlYXJDYWNoZWRJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/imageCache.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/idb-keyval/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/idb-keyval/dist/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   createStore: function() { return /* binding */ createStore; },\n/* harmony export */   del: function() { return /* binding */ del; },\n/* harmony export */   delMany: function() { return /* binding */ delMany; },\n/* harmony export */   entries: function() { return /* binding */ entries; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   getMany: function() { return /* binding */ getMany; },\n/* harmony export */   keys: function() { return /* binding */ keys; },\n/* harmony export */   promisifyRequest: function() { return /* binding */ promisifyRequest; },\n/* harmony export */   set: function() { return /* binding */ set; },\n/* harmony export */   setMany: function() { return /* binding */ setMany; },\n/* harmony export */   update: function() { return /* binding */ update; },\n/* harmony export */   values: function() { return /* binding */ values; }\n/* harmony export */ });\nfunction promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    let dbp;\n    const getDB = () => {\n        if (dbp)\n            return dbp;\n        const request = indexedDB.open(dbName);\n        request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n        dbp = promisifyRequest(request);\n        dbp.then((db) => {\n            // It seems like Safari sometimes likes to just close the connection.\n            // It's supposed to fire this event when that happens. Let's hope it does!\n            db.onclose = () => (dbp = undefined);\n        }, () => { });\n        return dbp;\n    };\n    return (txMode, callback) => getDB().then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/idb-keyval/dist/index.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);
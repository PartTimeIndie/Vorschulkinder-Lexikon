"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/Character.js":
/*!*********************************!*\
  !*** ./components/Character.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\nconst Character = (param)=>{\n    let { currentContext = \"idle\", onEmotionChange } = param;\n    _s();\n    const [currentEmotion, setCurrentEmotion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"idle\");\n    const [isRotating, setIsRotating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [rotationPhase, setRotationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"idle\"); // 'idle', 'out', 'in'\n    const [availableEmotions, setAvailableEmotions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        \"idle\",\n        \"curious\"\n    ]);\n    const [hasLoaded, setHasLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Für initiale Fly-In Animation\n    const [lastProcessedContext, setLastProcessedContext] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Verhindert mehrfache Emotion-Wechsel\n    const [lastEmotionChangeTime, setLastEmotionChangeTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Cooldown für Emotion-Changes\n    const autoResetTimer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const emotionChangeTimer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Character-Bilder-Varianten definieren\n    const characterVariants = {\n        idle: [\n            \"/Characters/Character-idle.png\",\n            \"/Characters/Character-idle-2.png\",\n            \"/Characters/Character-idle-3.png\"\n        ],\n        excited: [\n            \"/Characters/Character-excited.png\",\n            \"/Characters/Character-excited-2.png\",\n            \"/Characters/Character-excited-3.png\"\n        ],\n        curious: [\n            \"/Characters/Character-curious.png\",\n            \"/Characters/Character-curious-2.png\",\n            \"/Characters/Character-curious-3.png\"\n        ],\n        surprised: [\n            \"/Characters/Character-surprised.png\",\n            \"/Characters/Character-surprised-2.png\",\n            \"/Characters/Character-surprised-3.png\"\n        ],\n        thinking: [\n            \"/Characters/Character-thinking.png\",\n            \"/Characters/Character-thinking-2.png\",\n            \"/Characters/Character-thinking-3.png\"\n        ],\n        laughing: [\n            \"/Characters/Character-laughing.png\",\n            \"/Characters/Character-laughing-2.png\"\n        ],\n        exploring: [\n            \"/Characters/Character-excited.png\",\n            \"/Characters/Character-excited-2.png\",\n            \"/Characters/Character-excited-3.png\"\n        ],\n        scared: [\n            \"/Characters/Character-surprised.png\",\n            \"/Characters/Character-surprised-2.png\",\n            \"/Characters/Character-surprised-3.png\"\n        ]\n    };\n    // State für gewählte Variante pro Emotion\n    const [selectedVariant, setSelectedVariant] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"/Characters/Character-idle.png\");\n    // Zufällige Variante für Emotion wählen und speichern (NIEMALS die gleiche)\n    const selectVariantForEmotion = (emotion)=>{\n        const variants = characterVariants[emotion] || characterVariants.idle;\n        // Wenn nur eine Variante vorhanden, diese nehmen\n        if (variants.length === 1) {\n            const variant = variants[0];\n            setSelectedVariant(variant);\n            return variant;\n        }\n        // Aktuelle Variante rausfiltern um Wiederholung zu vermeiden\n        const otherVariants = variants.filter((variant)=>variant !== selectedVariant);\n        // Falls alle Varianten die gleiche sind (sollte nicht passieren), erste nehmen\n        if (otherVariants.length === 0) {\n            const variant = variants[0];\n            setSelectedVariant(variant);\n            return variant;\n        }\n        // Zufällige andere Variante wählen\n        const randomVariant = otherVariants[Math.floor(Math.random() * otherVariants.length)];\n        setSelectedVariant(randomVariant);\n        return randomVariant;\n    };\n    // Zufällige Emotion aus verfügbaren Emotionen wählen\n    const getRandomEmotion = function() {\n        let emotions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : availableEmotions;\n        const filtered = emotions.filter((e)=>e !== currentEmotion);\n        if (filtered.length === 0) return emotions[0];\n        return filtered[Math.floor(Math.random() * filtered.length)];\n    };\n    // Einfacher Emotion-Wechsel mit Bild-Flip (wie ursprünglich)\n    const changeEmotion = function(newEmotion) {\n        let immediate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        console.log(\"\\uD83C\\uDFAD changeEmotion called: \".concat(currentEmotion, \" -> \").concat(newEmotion));\n        if (newEmotion === currentEmotion) {\n            console.log(\"\\uD83C\\uDFAD BLOCKED: Same emotion \".concat(newEmotion, \", no change needed\"));\n            return;\n        }\n        console.log(\"\\uD83C\\uDFAD SIMPLE: Changing emotion to \".concat(newEmotion));\n        setCurrentEmotion(newEmotion);\n        selectVariantForEmotion(newEmotion);\n    };\n    // Auto-Reset entfernt - Character wechselt nur bei Interaktionen\n    // Context-abhängige Emotionen laden\n    const loadContextEmotions = async (context)=>{\n        console.log(\"\\uD83C\\uDFAD loadContextEmotions called with context: '\".concat(context, \"' (lastProcessed: '\").concat(lastProcessedContext, \"')\"));\n        try {\n            const response = await fetch(\"/api/character/random-emotion/\".concat(context));\n            const data = await response.json();\n            if (data.emotions) {\n                setAvailableEmotions(data.emotions);\n                // Cooldown prüfen: Keine Emotion-Wechsel wenn der letzte vor weniger als 2 Sekunden war\n                const now = Date.now();\n                const timeSinceLastChange = now - lastEmotionChangeTime;\n                const EMOTION_COOLDOWN = 2000; // 2 Sekunden Cooldown\n                console.log(\"\\uD83C\\uDFAD Context check: context=\".concat(context, \", lastProcessed=\").concat(lastProcessedContext, \", cooldown=\").concat(timeSinceLastChange, \"ms\"));\n                if (context !== \"idle\" && context !== lastProcessedContext && timeSinceLastChange >= EMOTION_COOLDOWN) {\n                    console.log(\"\\uD83C\\uDFAD TRIGGERING emotion change for context '\".concat(context, \"'\"));\n                    const randomEmotion = data.emotions[Math.floor(Math.random() * data.emotions.length)];\n                    changeEmotion(randomEmotion, false);\n                    setLastProcessedContext(context); // Merke dass wir diesen Context schon verarbeitet haben\n                    setLastEmotionChangeTime(now); // Setze Cooldown-Timer\n                } else if (context === lastProcessedContext) {\n                    console.log(\"\\uD83C\\uDFAD BLOCKED: Context '\".concat(context, \"' already processed\"));\n                } else if (timeSinceLastChange < EMOTION_COOLDOWN) {\n                    console.log(\"\\uD83C\\uDFAD BLOCKED: Cooldown active (\".concat(timeSinceLastChange, \"ms < \").concat(EMOTION_COOLDOWN, \"ms)\"));\n                } else if (context === \"idle\") {\n                    // Bei idle-Context: Reset lastProcessedContext für nächste Interaktion (aber kein Cooldown Reset)\n                    console.log(\"\\uD83C\\uDFAD RESET: Idle context, clearing lastProcessedContext\");\n                    setLastProcessedContext(null);\n                // Character wird NICHT neu instanziert, nur hasLoaded bleibt true\n                }\n            }\n        } catch (error) {\n            console.error(\"Error loading context emotions:\", error);\n            setAvailableEmotions([\n                \"idle\",\n                \"curious\"\n            ]);\n        }\n    };\n    // Zufälliges Lachen abspielen (ohne Voice-Overs zu unterbrechen)\n    const playRandomLaughter = ()=>{\n        const laughterFiles = [\n            \"/audio/LaughingKid/laughing-1.wav\",\n            \"/audio/LaughingKid/laughing-2.wav\",\n            \"/audio/LaughingKid/laughing-3.wav\",\n            \"/audio/LaughingKid/laughing-4.wav\",\n            \"/audio/LaughingKid/laughing-5.wav\",\n            \"/audio/LaughingKid/laughing-6.wav\",\n            \"/audio/LaughingKid/laughing-7.wav\"\n        ];\n        // Zufällige Lacher-Datei auswählen\n        const randomLaughter = laughterFiles[Math.floor(Math.random() * laughterFiles.length)];\n        try {\n            // SEPARATES Audio-Element für Lacher (nicht global!)\n            const laughterAudio = new Audio(randomLaughter);\n            laughterAudio.volume = 0.7; // Etwas leiser als Voice-Overs\n            laughterAudio.play().catch((err)=>{\n                console.log(\"Lacher-Audio autoplay verhindert:\", err);\n            });\n            console.log(\"\\uD83E\\uDD23 Lacher abgespielt:\", randomLaughter);\n        } catch (error) {\n            console.error(\"Lacher-Audio-Fehler:\", error);\n        }\n    };\n    // Character antippen - Rotation, Emotion-Wechsel UND Lachen\n    const handleCharacterClick = ()=>{\n        // Zu laughing oder excited wechseln, aber NIEMALS die aktuelle Emotion\n        const happyEmotions = [\n            \"laughing\",\n            \"excited\"\n        ];\n        let randomHappyEmotion;\n        // Andere Emotion wählen als die aktuelle\n        if (currentEmotion === \"laughing\") {\n            randomHappyEmotion = \"excited\";\n        } else if (currentEmotion === \"excited\") {\n            randomHappyEmotion = \"laughing\";\n        } else {\n            // Wenn weder laughing noch excited, zufällig wählen\n            randomHappyEmotion = happyEmotions[Math.floor(Math.random() * happyEmotions.length)];\n        }\n        changeEmotion(randomHappyEmotion);\n        setLastEmotionChangeTime(Date.now()); // Cooldown-Timer auch bei direktem Character-Klick setzen\n        // Zufälliges Lachen abspielen (parallel zu Voice-Overs)\n        playRandomLaughter();\n        // Callback für Emotion-Änderung\n        if (onEmotionChange) {\n            onEmotionChange(randomHappyEmotion);\n        }\n    };\n    // Initial Fly-In Animation starten - NUR EINMAL beim ersten Mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Nach kurzer Verzögerung Character reinfliegen lassen\n        const loadTimer = setTimeout(()=>{\n            setHasLoaded(true);\n        }, 300);\n        return ()=>clearTimeout(loadTimer);\n    }, []); // Leeres Array - NUR beim ersten Mount\n    // Debug: Character Mount/Unmount tracking\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83C\\uDFAD Character MOUNTED/RE-MOUNTED\");\n        return ()=>{\n            console.log(\"\\uD83C\\uDFAD Character UNMOUNTED\");\n        };\n    }, []);\n    // Context-Änderungen überwachen - mit Ref um doppelte Aufrufe zu verhindern\n    const lastContextRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83C\\uDFAD useEffect triggered: currentContext='\".concat(currentContext, \"', lastContextRef='\").concat(lastContextRef.current, \"'\"));\n        if (currentContext && currentContext !== lastContextRef.current) {\n            console.log(\"\\uD83C\\uDFAD useEffect: Processing NEW context '\".concat(currentContext, \"'\"));\n            lastContextRef.current = currentContext;\n            loadContextEmotions(currentContext);\n        } else if (currentContext === lastContextRef.current) {\n            console.log(\"\\uD83C\\uDFAD useEffect: IGNORING duplicate context '\".concat(currentContext, \"'\"));\n        }\n    }, [\n        currentContext\n    ]);\n    // Cleanup Timer\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        return ()=>{\n            if (autoResetTimer.current) clearTimeout(autoResetTimer.current);\n            if (emotionChangeTimer.current) clearTimeout(emotionChangeTimer.current);\n        };\n    }, []);\n    // Animation-Klassen bestimmen\n    const getAnimationClasses = ()=>{\n        let classes = \"character-image\";\n        // Initial Fly-In Animation beim ersten Laden\n        if (!hasLoaded) {\n            classes += \" character-fly-in\";\n            return classes;\n        }\n        if (rotationPhase === \"out\") {\n            classes += \" character-rotate-out\";\n        } else if (rotationPhase === \"in\") {\n            classes += \" character-rotate-in\";\n        }\n        // Subtile Loop-Animation wenn keine Rotation läuft\n        if (rotationPhase === \"idle\") {\n            classes += \" character-subtle-animation\";\n        }\n        return classes;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"character-container\",\n        onClick: handleCharacterClick,\n        title: \"Character antippen f\\xfcr Emotionen!\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n            src: selectedVariant,\n            alt: \"Character \".concat(currentEmotion),\n            width: 120,\n            height: 150,\n            className: getAnimationClasses(),\n            priority: true,\n            unoptimized: true\n        }, void 0, false, {\n            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\components\\\\Character.js\",\n            lineNumber: 283,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\components\\\\Character.js\",\n        lineNumber: 278,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Character, \"RcWl0fHSrKrmx70C4a2/vdmYa5M=\");\n_c = Character;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Character); // Cache-Refresh: Updated Character Animation and removed isBouncing \nvar _c;\n$RefreshReg$(_c, \"Character\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWVDLE9BQU8sRUFBRTtZQUNwRDlCLFFBQVFDLEdBQUcsQ0FBQyx1REFBNEQsT0FBZmhELGdCQUFlO1FBQzFFO0lBQ0YsR0FBRztRQUFDQTtLQUFlO0lBRW5CLGdCQUFnQjtJQUNoQkosZ0RBQVNBLENBQUM7UUFDUixPQUFPO1lBQ0wsSUFBSW9CLGVBQWU2RCxPQUFPLEVBQUVGLGFBQWEzRCxlQUFlNkQsT0FBTztZQUMvRCxJQUFJNUQsbUJBQW1CNEQsT0FBTyxFQUFFRixhQUFhMUQsbUJBQW1CNEQsT0FBTztRQUN6RTtJQUNGLEdBQUcsRUFBRTtJQUVMLDhCQUE4QjtJQUM5QixNQUFNQyxzQkFBc0I7UUFDMUIsSUFBSUMsVUFBVTtRQUVkLDZDQUE2QztRQUM3QyxJQUFJLENBQUNyRSxXQUFXO1lBQ2RxRSxXQUFXO1lBQ1gsT0FBT0E7UUFDVDtRQUVBLElBQUl6RSxrQkFBa0IsT0FBTztZQUMzQnlFLFdBQVc7UUFDYixPQUFPLElBQUl6RSxrQkFBa0IsTUFBTTtZQUNqQ3lFLFdBQVc7UUFDYjtRQUVBLG1EQUFtRDtRQUNuRCxJQUFJekUsa0JBQWtCLFFBQVE7WUFDNUJ5RSxXQUFXO1FBQ2I7UUFFQSxPQUFPQTtJQUNUO0lBRUEscUJBQ0UsOERBQUNDO1FBQ0NDLFdBQVU7UUFDVkMsU0FBU1o7UUFDVGEsT0FBTTtrQkFFTiw0RUFBQ3JGLG1EQUFLQTtZQUNKc0YsS0FBS3pEO1lBQ0wwRCxLQUFLLGFBQTRCLE9BQWZuRjtZQUNsQm9GLE9BQU87WUFDUEMsUUFBUTtZQUNSTixXQUFXSDtZQUNYVSxRQUFRO1lBQ1JDLFdBQVc7Ozs7Ozs7Ozs7O0FBSW5CO0dBbFNNMUY7S0FBQUE7QUFvU04sK0RBQWVBLFNBQVNBLEVBQUMsQ0FDekIscUVBQXFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvQ2hhcmFjdGVyLmpzP2UyN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEltYWdlIGZyb20gJ25leHQvaW1hZ2UnO1xuXG5jb25zdCBDaGFyYWN0ZXIgPSAoeyBjdXJyZW50Q29udGV4dCA9ICdpZGxlJywgb25FbW90aW9uQ2hhbmdlIH0pID0+IHtcbiAgY29uc3QgW2N1cnJlbnRFbW90aW9uLCBzZXRDdXJyZW50RW1vdGlvbl0gPSB1c2VTdGF0ZSgnaWRsZScpO1xuICBjb25zdCBbaXNSb3RhdGluZywgc2V0SXNSb3RhdGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtyb3RhdGlvblBoYXNlLCBzZXRSb3RhdGlvblBoYXNlXSA9IHVzZVN0YXRlKCdpZGxlJyk7IC8vICdpZGxlJywgJ291dCcsICdpbidcbiAgY29uc3QgW2F2YWlsYWJsZUVtb3Rpb25zLCBzZXRBdmFpbGFibGVFbW90aW9uc10gPSB1c2VTdGF0ZShbJ2lkbGUnLCAnY3VyaW91cyddKTtcbiAgY29uc3QgW2hhc0xvYWRlZCwgc2V0SGFzTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTsgLy8gRsO8ciBpbml0aWFsZSBGbHktSW4gQW5pbWF0aW9uXG4gIGNvbnN0IFtsYXN0UHJvY2Vzc2VkQ29udGV4dCwgc2V0TGFzdFByb2Nlc3NlZENvbnRleHRdID0gdXNlU3RhdGUobnVsbCk7IC8vIFZlcmhpbmRlcnQgbWVocmZhY2hlIEVtb3Rpb24tV2VjaHNlbFxuICBjb25zdCBbbGFzdEVtb3Rpb25DaGFuZ2VUaW1lLCBzZXRMYXN0RW1vdGlvbkNoYW5nZVRpbWVdID0gdXNlU3RhdGUoMCk7IC8vIENvb2xkb3duIGbDvHIgRW1vdGlvbi1DaGFuZ2VzXG4gIFxuICBjb25zdCBhdXRvUmVzZXRUaW1lciA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgZW1vdGlvbkNoYW5nZVRpbWVyID0gdXNlUmVmKG51bGwpO1xuXG4gIC8vIENoYXJhY3Rlci1CaWxkZXItVmFyaWFudGVuIGRlZmluaWVyZW5cbiAgY29uc3QgY2hhcmFjdGVyVmFyaWFudHMgPSB7XG4gICAgaWRsZTogW1xuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1pZGxlLnBuZycsXG4gICAgICAnL0NoYXJhY3RlcnMvQ2hhcmFjdGVyLWlkbGUtMi5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1pZGxlLTMucG5nJ1xuICAgIF0sXG4gICAgZXhjaXRlZDogW1xuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1leGNpdGVkLnBuZycsXG4gICAgICAnL0NoYXJhY3RlcnMvQ2hhcmFjdGVyLWV4Y2l0ZWQtMi5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1leGNpdGVkLTMucG5nJ1xuICAgIF0sXG4gICAgY3VyaW91czogW1xuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1jdXJpb3VzLnBuZycsXG4gICAgICAnL0NoYXJhY3RlcnMvQ2hhcmFjdGVyLWN1cmlvdXMtMi5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1jdXJpb3VzLTMucG5nJ1xuICAgIF0sXG4gICAgc3VycHJpc2VkOiBbXG4gICAgICAnL0NoYXJhY3RlcnMvQ2hhcmFjdGVyLXN1cnByaXNlZC5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1zdXJwcmlzZWQtMi5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1zdXJwcmlzZWQtMy5wbmcnXG4gICAgXSxcbiAgICB0aGlua2luZzogW1xuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci10aGlua2luZy5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci10aGlua2luZy0yLnBuZycsXG4gICAgICAnL0NoYXJhY3RlcnMvQ2hhcmFjdGVyLXRoaW5raW5nLTMucG5nJ1xuICAgIF0sXG4gICAgbGF1Z2hpbmc6IFtcbiAgICAgICcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItbGF1Z2hpbmcucG5nJyxcbiAgICAgICcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItbGF1Z2hpbmctMi5wbmcnXG4gICAgXSxcbiAgICBleHBsb3Jpbmc6IFtcbiAgICAgICcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItZXhjaXRlZC5wbmcnLFxuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1leGNpdGVkLTIucG5nJyxcbiAgICAgICcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItZXhjaXRlZC0zLnBuZydcbiAgICBdLFxuICAgIHNjYXJlZDogW1xuICAgICAgJy9DaGFyYWN0ZXJzL0NoYXJhY3Rlci1zdXJwcmlzZWQucG5nJyxcbiAgICAgICcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItc3VycHJpc2VkLTIucG5nJyxcbiAgICAgICcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItc3VycHJpc2VkLTMucG5nJ1xuICAgIF0sXG4gIH07XG5cbiAgLy8gU3RhdGUgZsO8ciBnZXfDpGhsdGUgVmFyaWFudGUgcHJvIEVtb3Rpb25cbiAgY29uc3QgW3NlbGVjdGVkVmFyaWFudCwgc2V0U2VsZWN0ZWRWYXJpYW50XSA9IHVzZVN0YXRlKCcvQ2hhcmFjdGVycy9DaGFyYWN0ZXItaWRsZS5wbmcnKTtcblxuICAvLyBadWbDpGxsaWdlIFZhcmlhbnRlIGbDvHIgRW1vdGlvbiB3w6RobGVuIHVuZCBzcGVpY2hlcm4gKE5JRU1BTFMgZGllIGdsZWljaGUpXG4gIGNvbnN0IHNlbGVjdFZhcmlhbnRGb3JFbW90aW9uID0gKGVtb3Rpb24pID0+IHtcbiAgICBjb25zdCB2YXJpYW50cyA9IGNoYXJhY3RlclZhcmlhbnRzW2Vtb3Rpb25dIHx8IGNoYXJhY3RlclZhcmlhbnRzLmlkbGU7XG4gICAgXG4gICAgLy8gV2VubiBudXIgZWluZSBWYXJpYW50ZSB2b3JoYW5kZW4sIGRpZXNlIG5laG1lblxuICAgIGlmICh2YXJpYW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGNvbnN0IHZhcmlhbnQgPSB2YXJpYW50c1swXTtcbiAgICAgIHNldFNlbGVjdGVkVmFyaWFudCh2YXJpYW50KTtcbiAgICAgIHJldHVybiB2YXJpYW50O1xuICAgIH1cbiAgICBcbiAgICAvLyBBa3R1ZWxsZSBWYXJpYW50ZSByYXVzZmlsdGVybiB1bSBXaWVkZXJob2x1bmcgenUgdmVybWVpZGVuXG4gICAgY29uc3Qgb3RoZXJWYXJpYW50cyA9IHZhcmlhbnRzLmZpbHRlcih2YXJpYW50ID0+IHZhcmlhbnQgIT09IHNlbGVjdGVkVmFyaWFudCk7XG4gICAgXG4gICAgLy8gRmFsbHMgYWxsZSBWYXJpYW50ZW4gZGllIGdsZWljaGUgc2luZCAoc29sbHRlIG5pY2h0IHBhc3NpZXJlbiksIGVyc3RlIG5laG1lblxuICAgIGlmIChvdGhlclZhcmlhbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc3QgdmFyaWFudCA9IHZhcmlhbnRzWzBdO1xuICAgICAgc2V0U2VsZWN0ZWRWYXJpYW50KHZhcmlhbnQpO1xuICAgICAgcmV0dXJuIHZhcmlhbnQ7XG4gICAgfVxuICAgIFxuICAgIC8vIFp1ZsOkbGxpZ2UgYW5kZXJlIFZhcmlhbnRlIHfDpGhsZW5cbiAgICBjb25zdCByYW5kb21WYXJpYW50ID0gb3RoZXJWYXJpYW50c1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBvdGhlclZhcmlhbnRzLmxlbmd0aCldO1xuICAgIHNldFNlbGVjdGVkVmFyaWFudChyYW5kb21WYXJpYW50KTtcbiAgICByZXR1cm4gcmFuZG9tVmFyaWFudDtcbiAgfTtcblxuICAvLyBadWbDpGxsaWdlIEVtb3Rpb24gYXVzIHZlcmbDvGdiYXJlbiBFbW90aW9uZW4gd8OkaGxlblxuICBjb25zdCBnZXRSYW5kb21FbW90aW9uID0gKGVtb3Rpb25zID0gYXZhaWxhYmxlRW1vdGlvbnMpID0+IHtcbiAgICBjb25zdCBmaWx0ZXJlZCA9IGVtb3Rpb25zLmZpbHRlcihlID0+IGUgIT09IGN1cnJlbnRFbW90aW9uKTtcbiAgICBpZiAoZmlsdGVyZWQubGVuZ3RoID09PSAwKSByZXR1cm4gZW1vdGlvbnNbMF07XG4gICAgcmV0dXJuIGZpbHRlcmVkW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGZpbHRlcmVkLmxlbmd0aCldO1xuICB9O1xuXG4gIC8vIEVpbmZhY2hlciBFbW90aW9uLVdlY2hzZWwgbWl0IEJpbGQtRmxpcCAod2llIHVyc3Byw7xuZ2xpY2gpXG4gIGNvbnN0IGNoYW5nZUVtb3Rpb24gPSAobmV3RW1vdGlvbiwgaW1tZWRpYXRlID0gdHJ1ZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGDwn46tIGNoYW5nZUVtb3Rpb24gY2FsbGVkOiAke2N1cnJlbnRFbW90aW9ufSAtPiAke25ld0Vtb3Rpb259YCk7XG4gICAgXG4gICAgaWYgKG5ld0Vtb3Rpb24gPT09IGN1cnJlbnRFbW90aW9uKSB7XG4gICAgICBjb25zb2xlLmxvZyhg8J+OrSBCTE9DS0VEOiBTYW1lIGVtb3Rpb24gJHtuZXdFbW90aW9ufSwgbm8gY2hhbmdlIG5lZWRlZGApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZyhg8J+OrSBTSU1QTEU6IENoYW5naW5nIGVtb3Rpb24gdG8gJHtuZXdFbW90aW9ufWApO1xuICAgIHNldEN1cnJlbnRFbW90aW9uKG5ld0Vtb3Rpb24pO1xuICAgIHNlbGVjdFZhcmlhbnRGb3JFbW90aW9uKG5ld0Vtb3Rpb24pO1xuICB9O1xuXG4gIC8vIEF1dG8tUmVzZXQgZW50ZmVybnQgLSBDaGFyYWN0ZXIgd2VjaHNlbHQgbnVyIGJlaSBJbnRlcmFrdGlvbmVuXG5cbiAgLy8gQ29udGV4dC1hYmjDpG5naWdlIEVtb3Rpb25lbiBsYWRlblxuICBjb25zdCBsb2FkQ29udGV4dEVtb3Rpb25zID0gYXN5bmMgKGNvbnRleHQpID0+IHtcbiAgICBjb25zb2xlLmxvZyhg8J+OrSBsb2FkQ29udGV4dEVtb3Rpb25zIGNhbGxlZCB3aXRoIGNvbnRleHQ6ICcke2NvbnRleHR9JyAobGFzdFByb2Nlc3NlZDogJyR7bGFzdFByb2Nlc3NlZENvbnRleHR9JylgKTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9jaGFyYWN0ZXIvcmFuZG9tLWVtb3Rpb24vJHtjb250ZXh0fWApO1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIFxuICAgICAgaWYgKGRhdGEuZW1vdGlvbnMpIHtcbiAgICAgICAgc2V0QXZhaWxhYmxlRW1vdGlvbnMoZGF0YS5lbW90aW9ucyk7XG4gICAgICAgIFxuICAgICAgICAvLyBDb29sZG93biBwcsO8ZmVuOiBLZWluZSBFbW90aW9uLVdlY2hzZWwgd2VubiBkZXIgbGV0enRlIHZvciB3ZW5pZ2VyIGFscyAyIFNla3VuZGVuIHdhclxuICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICBjb25zdCB0aW1lU2luY2VMYXN0Q2hhbmdlID0gbm93IC0gbGFzdEVtb3Rpb25DaGFuZ2VUaW1lO1xuICAgICAgICBjb25zdCBFTU9USU9OX0NPT0xET1dOID0gMjAwMDsgLy8gMiBTZWt1bmRlbiBDb29sZG93blxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYPCfjq0gQ29udGV4dCBjaGVjazogY29udGV4dD0ke2NvbnRleHR9LCBsYXN0UHJvY2Vzc2VkPSR7bGFzdFByb2Nlc3NlZENvbnRleHR9LCBjb29sZG93bj0ke3RpbWVTaW5jZUxhc3RDaGFuZ2V9bXNgKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChjb250ZXh0ICE9PSAnaWRsZScgJiYgY29udGV4dCAhPT0gbGFzdFByb2Nlc3NlZENvbnRleHQgJiYgdGltZVNpbmNlTGFzdENoYW5nZSA+PSBFTU9USU9OX0NPT0xET1dOKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYPCfjq0gVFJJR0dFUklORyBlbW90aW9uIGNoYW5nZSBmb3IgY29udGV4dCAnJHtjb250ZXh0fSdgKTtcbiAgICAgICAgICBjb25zdCByYW5kb21FbW90aW9uID0gZGF0YS5lbW90aW9uc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBkYXRhLmVtb3Rpb25zLmxlbmd0aCldO1xuICAgICAgICAgIGNoYW5nZUVtb3Rpb24ocmFuZG9tRW1vdGlvbiwgZmFsc2UpO1xuICAgICAgICAgIHNldExhc3RQcm9jZXNzZWRDb250ZXh0KGNvbnRleHQpOyAvLyBNZXJrZSBkYXNzIHdpciBkaWVzZW4gQ29udGV4dCBzY2hvbiB2ZXJhcmJlaXRldCBoYWJlblxuICAgICAgICAgIHNldExhc3RFbW90aW9uQ2hhbmdlVGltZShub3cpOyAvLyBTZXR6ZSBDb29sZG93bi1UaW1lclxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQgPT09IGxhc3RQcm9jZXNzZWRDb250ZXh0KSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYPCfjq0gQkxPQ0tFRDogQ29udGV4dCAnJHtjb250ZXh0fScgYWxyZWFkeSBwcm9jZXNzZWRgKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aW1lU2luY2VMYXN0Q2hhbmdlIDwgRU1PVElPTl9DT09MRE9XTikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDwn46tIEJMT0NLRUQ6IENvb2xkb3duIGFjdGl2ZSAoJHt0aW1lU2luY2VMYXN0Q2hhbmdlfW1zIDwgJHtFTU9USU9OX0NPT0xET1dOfW1zKWApO1xuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQgPT09ICdpZGxlJykge1xuICAgICAgICAgIC8vIEJlaSBpZGxlLUNvbnRleHQ6IFJlc2V0IGxhc3RQcm9jZXNzZWRDb250ZXh0IGbDvHIgbsOkY2hzdGUgSW50ZXJha3Rpb24gKGFiZXIga2VpbiBDb29sZG93biBSZXNldClcbiAgICAgICAgICBjb25zb2xlLmxvZyhg8J+OrSBSRVNFVDogSWRsZSBjb250ZXh0LCBjbGVhcmluZyBsYXN0UHJvY2Vzc2VkQ29udGV4dGApO1xuICAgICAgICAgIHNldExhc3RQcm9jZXNzZWRDb250ZXh0KG51bGwpO1xuICAgICAgICAgIC8vIENoYXJhY3RlciB3aXJkIE5JQ0hUIG5ldSBpbnN0YW56aWVydCwgbnVyIGhhc0xvYWRlZCBibGVpYnQgdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgY29udGV4dCBlbW90aW9uczonLCBlcnJvcik7XG4gICAgICBzZXRBdmFpbGFibGVFbW90aW9ucyhbJ2lkbGUnLCAnY3VyaW91cyddKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gWnVmw6RsbGlnZXMgTGFjaGVuIGFic3BpZWxlbiAob2huZSBWb2ljZS1PdmVycyB6dSB1bnRlcmJyZWNoZW4pXG4gIGNvbnN0IHBsYXlSYW5kb21MYXVnaHRlciA9ICgpID0+IHtcbiAgICBjb25zdCBsYXVnaHRlckZpbGVzID0gW1xuICAgICAgJy9hdWRpby9MYXVnaGluZ0tpZC9sYXVnaGluZy0xLndhdicsXG4gICAgICAnL2F1ZGlvL0xhdWdoaW5nS2lkL2xhdWdoaW5nLTIud2F2JyxcbiAgICAgICcvYXVkaW8vTGF1Z2hpbmdLaWQvbGF1Z2hpbmctMy53YXYnLFxuICAgICAgJy9hdWRpby9MYXVnaGluZ0tpZC9sYXVnaGluZy00LndhdicsXG4gICAgICAnL2F1ZGlvL0xhdWdoaW5nS2lkL2xhdWdoaW5nLTUud2F2JyxcbiAgICAgICcvYXVkaW8vTGF1Z2hpbmdLaWQvbGF1Z2hpbmctNi53YXYnLFxuICAgICAgJy9hdWRpby9MYXVnaGluZ0tpZC9sYXVnaGluZy03LndhdidcbiAgICBdO1xuICAgIFxuICAgIC8vIFp1ZsOkbGxpZ2UgTGFjaGVyLURhdGVpIGF1c3fDpGhsZW5cbiAgICBjb25zdCByYW5kb21MYXVnaHRlciA9IGxhdWdodGVyRmlsZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGF1Z2h0ZXJGaWxlcy5sZW5ndGgpXTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gU0VQQVJBVEVTIEF1ZGlvLUVsZW1lbnQgZsO8ciBMYWNoZXIgKG5pY2h0IGdsb2JhbCEpXG4gICAgICBjb25zdCBsYXVnaHRlckF1ZGlvID0gbmV3IEF1ZGlvKHJhbmRvbUxhdWdodGVyKTtcbiAgICAgIGxhdWdodGVyQXVkaW8udm9sdW1lID0gMC43OyAvLyBFdHdhcyBsZWlzZXIgYWxzIFZvaWNlLU92ZXJzXG4gICAgICBcbiAgICAgIGxhdWdodGVyQXVkaW8ucGxheSgpLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdMYWNoZXItQXVkaW8gYXV0b3BsYXkgdmVyaGluZGVydDonLCBlcnIpO1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCfwn6SjIExhY2hlciBhYmdlc3BpZWx0OicsIHJhbmRvbUxhdWdodGVyKTtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdMYWNoZXItQXVkaW8tRmVobGVyOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gQ2hhcmFjdGVyIGFudGlwcGVuIC0gUm90YXRpb24sIEVtb3Rpb24tV2VjaHNlbCBVTkQgTGFjaGVuXG4gIGNvbnN0IGhhbmRsZUNoYXJhY3RlckNsaWNrID0gKCkgPT4ge1xuICAgIC8vIFp1IGxhdWdoaW5nIG9kZXIgZXhjaXRlZCB3ZWNoc2VsbiwgYWJlciBOSUVNQUxTIGRpZSBha3R1ZWxsZSBFbW90aW9uXG4gICAgY29uc3QgaGFwcHlFbW90aW9ucyA9IFsnbGF1Z2hpbmcnLCAnZXhjaXRlZCddO1xuICAgIGxldCByYW5kb21IYXBweUVtb3Rpb247XG4gICAgXG4gICAgLy8gQW5kZXJlIEVtb3Rpb24gd8OkaGxlbiBhbHMgZGllIGFrdHVlbGxlXG4gICAgaWYgKGN1cnJlbnRFbW90aW9uID09PSAnbGF1Z2hpbmcnKSB7XG4gICAgICByYW5kb21IYXBweUVtb3Rpb24gPSAnZXhjaXRlZCc7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50RW1vdGlvbiA9PT0gJ2V4Y2l0ZWQnKSB7XG4gICAgICByYW5kb21IYXBweUVtb3Rpb24gPSAnbGF1Z2hpbmcnOyAgXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFdlbm4gd2VkZXIgbGF1Z2hpbmcgbm9jaCBleGNpdGVkLCB6dWbDpGxsaWcgd8OkaGxlblxuICAgICAgcmFuZG9tSGFwcHlFbW90aW9uID0gaGFwcHlFbW90aW9uc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBoYXBweUVtb3Rpb25zLmxlbmd0aCldO1xuICAgIH1cbiAgICBcbiAgICBjaGFuZ2VFbW90aW9uKHJhbmRvbUhhcHB5RW1vdGlvbik7XG4gICAgc2V0TGFzdEVtb3Rpb25DaGFuZ2VUaW1lKERhdGUubm93KCkpOyAvLyBDb29sZG93bi1UaW1lciBhdWNoIGJlaSBkaXJla3RlbSBDaGFyYWN0ZXItS2xpY2sgc2V0emVuXG4gICAgXG4gICAgLy8gWnVmw6RsbGlnZXMgTGFjaGVuIGFic3BpZWxlbiAocGFyYWxsZWwgenUgVm9pY2UtT3ZlcnMpXG4gICAgcGxheVJhbmRvbUxhdWdodGVyKCk7XG4gICAgXG4gICAgLy8gQ2FsbGJhY2sgZsO8ciBFbW90aW9uLcOEbmRlcnVuZ1xuICAgIGlmIChvbkVtb3Rpb25DaGFuZ2UpIHtcbiAgICAgIG9uRW1vdGlvbkNoYW5nZShyYW5kb21IYXBweUVtb3Rpb24pO1xuICAgIH1cbiAgfTtcblxuICAvLyBJbml0aWFsIEZseS1JbiBBbmltYXRpb24gc3RhcnRlbiAtIE5VUiBFSU5NQUwgYmVpbSBlcnN0ZW4gTW91bnRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBOYWNoIGt1cnplciBWZXJ6w7ZnZXJ1bmcgQ2hhcmFjdGVyIHJlaW5mbGllZ2VuIGxhc3NlblxuICAgIGNvbnN0IGxvYWRUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2V0SGFzTG9hZGVkKHRydWUpO1xuICAgIH0sIDMwMCk7XG4gICAgXG4gICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dChsb2FkVGltZXIpO1xuICB9LCBbXSk7IC8vIExlZXJlcyBBcnJheSAtIE5VUiBiZWltIGVyc3RlbiBNb3VudFxuICBcbiAgLy8gRGVidWc6IENoYXJhY3RlciBNb3VudC9Vbm1vdW50IHRyYWNraW5nXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYPCfjq0gQ2hhcmFjdGVyIE1PVU5URUQvUkUtTU9VTlRFRGApO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhg8J+OrSBDaGFyYWN0ZXIgVU5NT1VOVEVEYCk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIC8vIENvbnRleHQtw4RuZGVydW5nZW4gw7xiZXJ3YWNoZW4gLSBtaXQgUmVmIHVtIGRvcHBlbHRlIEF1ZnJ1ZmUgenUgdmVyaGluZGVyblxuICBjb25zdCBsYXN0Q29udGV4dFJlZiA9IHVzZVJlZihudWxsKTtcbiAgXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYPCfjq0gdXNlRWZmZWN0IHRyaWdnZXJlZDogY3VycmVudENvbnRleHQ9JyR7Y3VycmVudENvbnRleHR9JywgbGFzdENvbnRleHRSZWY9JyR7bGFzdENvbnRleHRSZWYuY3VycmVudH0nYCk7XG4gICAgXG4gICAgaWYgKGN1cnJlbnRDb250ZXh0ICYmIGN1cnJlbnRDb250ZXh0ICE9PSBsYXN0Q29udGV4dFJlZi5jdXJyZW50KSB7XG4gICAgICBjb25zb2xlLmxvZyhg8J+OrSB1c2VFZmZlY3Q6IFByb2Nlc3NpbmcgTkVXIGNvbnRleHQgJyR7Y3VycmVudENvbnRleHR9J2ApO1xuICAgICAgbGFzdENvbnRleHRSZWYuY3VycmVudCA9IGN1cnJlbnRDb250ZXh0O1xuICAgICAgbG9hZENvbnRleHRFbW90aW9ucyhjdXJyZW50Q29udGV4dCk7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50Q29udGV4dCA9PT0gbGFzdENvbnRleHRSZWYuY3VycmVudCkge1xuICAgICAgY29uc29sZS5sb2coYPCfjq0gdXNlRWZmZWN0OiBJR05PUklORyBkdXBsaWNhdGUgY29udGV4dCAnJHtjdXJyZW50Q29udGV4dH0nYCk7XG4gICAgfVxuICB9LCBbY3VycmVudENvbnRleHRdKTtcblxuICAvLyBDbGVhbnVwIFRpbWVyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChhdXRvUmVzZXRUaW1lci5jdXJyZW50KSBjbGVhclRpbWVvdXQoYXV0b1Jlc2V0VGltZXIuY3VycmVudCk7XG4gICAgICBpZiAoZW1vdGlvbkNoYW5nZVRpbWVyLmN1cnJlbnQpIGNsZWFyVGltZW91dChlbW90aW9uQ2hhbmdlVGltZXIuY3VycmVudCk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIC8vIEFuaW1hdGlvbi1LbGFzc2VuIGJlc3RpbW1lblxuICBjb25zdCBnZXRBbmltYXRpb25DbGFzc2VzID0gKCkgPT4ge1xuICAgIGxldCBjbGFzc2VzID0gJ2NoYXJhY3Rlci1pbWFnZSc7XG4gICAgXG4gICAgLy8gSW5pdGlhbCBGbHktSW4gQW5pbWF0aW9uIGJlaW0gZXJzdGVuIExhZGVuXG4gICAgaWYgKCFoYXNMb2FkZWQpIHtcbiAgICAgIGNsYXNzZXMgKz0gJyBjaGFyYWN0ZXItZmx5LWluJztcbiAgICAgIHJldHVybiBjbGFzc2VzO1xuICAgIH1cbiAgICBcbiAgICBpZiAocm90YXRpb25QaGFzZSA9PT0gJ291dCcpIHtcbiAgICAgIGNsYXNzZXMgKz0gJyBjaGFyYWN0ZXItcm90YXRlLW91dCc7XG4gICAgfSBlbHNlIGlmIChyb3RhdGlvblBoYXNlID09PSAnaW4nKSB7XG4gICAgICBjbGFzc2VzICs9ICcgY2hhcmFjdGVyLXJvdGF0ZS1pbic7XG4gICAgfVxuICAgIFxuICAgIC8vIFN1YnRpbGUgTG9vcC1BbmltYXRpb24gd2VubiBrZWluZSBSb3RhdGlvbiBsw6R1ZnRcbiAgICBpZiAocm90YXRpb25QaGFzZSA9PT0gJ2lkbGUnKSB7XG4gICAgICBjbGFzc2VzICs9ICcgY2hhcmFjdGVyLXN1YnRsZS1hbmltYXRpb24nO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY2xhc3NlcztcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICBjbGFzc05hbWU9XCJjaGFyYWN0ZXItY29udGFpbmVyXCJcbiAgICAgIG9uQ2xpY2s9e2hhbmRsZUNoYXJhY3RlckNsaWNrfVxuICAgICAgdGl0bGU9XCJDaGFyYWN0ZXIgYW50aXBwZW4gZsO8ciBFbW90aW9uZW4hXCJcbiAgICA+XG4gICAgICA8SW1hZ2VcbiAgICAgICAgc3JjPXtzZWxlY3RlZFZhcmlhbnR9XG4gICAgICAgIGFsdD17YENoYXJhY3RlciAke2N1cnJlbnRFbW90aW9ufWB9XG4gICAgICAgIHdpZHRoPXsxMjB9XG4gICAgICAgIGhlaWdodD17MTUwfVxuICAgICAgICBjbGFzc05hbWU9e2dldEFuaW1hdGlvbkNsYXNzZXMoKX1cbiAgICAgICAgcHJpb3JpdHlcbiAgICAgICAgdW5vcHRpbWl6ZWQgLy8gRsO8ciBsb2thbGUgRW50d2lja2x1bmdcbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDaGFyYWN0ZXI7IFxuLy8gQ2FjaGUtUmVmcmVzaDogVXBkYXRlZCBDaGFyYWN0ZXIgQW5pbWF0aW9uIGFuZCByZW1vdmVkIGlzQm91bmNpbmcgIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUmVmIiwiSW1hZ2UiLCJDaGFyYWN0ZXIiLCJjdXJyZW50Q29udGV4dCIsIm9uRW1vdGlvbkNoYW5nZSIsImN1cnJlbnRFbW90aW9uIiwic2V0Q3VycmVudEVtb3Rpb24iLCJpc1JvdGF0aW5nIiwic2V0SXNSb3RhdGluZyIsInJvdGF0aW9uUGhhc2UiLCJzZXRSb3RhdGlvblBoYXNlIiwiYXZhaWxhYmxlRW1vdGlvbnMiLCJzZXRBdmFpbGFibGVFbW90aW9ucyIsImhhc0xvYWRlZCIsInNldEhhc0xvYWRlZCIsImxhc3RQcm9jZXNzZWRDb250ZXh0Iiwic2V0TGFzdFByb2Nlc3NlZENvbnRleHQiLCJsYXN0RW1vdGlvbkNoYW5nZVRpbWUiLCJzZXRMYXN0RW1vdGlvbkNoYW5nZVRpbWUiLCJhdXRvUmVzZXRUaW1lciIsImVtb3Rpb25DaGFuZ2VUaW1lciIsImNoYXJhY3RlclZhcmlhbnRzIiwiaWRsZSIsImV4Y2l0ZWQiLCJjdXJpb3VzIiwic3VycHJpc2VkIiwidGhpbmtpbmciLCJsYXVnaGluZyIsImV4cGxvcmluZyIsInNjYXJlZCIsInNlbGVjdGVkVmFyaWFudCIsInNldFNlbGVjdGVkVmFyaWFudCIsInNlbGVjdFZhcmlhbnRGb3JFbW90aW9uIiwiZW1vdGlvbiIsInZhcmlhbnRzIiwibGVuZ3RoIiwidmFyaWFudCIsIm90aGVyVmFyaWFudHMiLCJmaWx0ZXIiLCJyYW5kb21WYXJpYW50IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiZ2V0UmFuZG9tRW1vdGlvbiIsImVtb3Rpb25zIiwiZmlsdGVyZWQiLCJlIiwiY2hhbmdlRW1vdGlvbiIsIm5ld0Vtb3Rpb24iLCJpbW1lZGlhdGUiLCJjb25zb2xlIiwibG9nIiwibG9hZENvbnRleHRFbW90aW9ucyIsImNvbnRleHQiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJub3ciLCJEYXRlIiwidGltZVNpbmNlTGFzdENoYW5nZSIsIkVNT1RJT05fQ09PTERPV04iLCJyYW5kb21FbW90aW9uIiwiZXJyb3IiLCJwbGF5UmFuZG9tTGF1Z2h0ZXIiLCJsYXVnaHRlckZpbGVzIiwicmFuZG9tTGF1Z2h0ZXIiLCJsYXVnaHRlckF1ZGlvIiwiQXVkaW8iLCJ2b2x1bWUiLCJwbGF5IiwiY2F0Y2giLCJlcnIiLCJoYW5kbGVDaGFyYWN0ZXJDbGljayIsImhhcHB5RW1vdGlvbnMiLCJyYW5kb21IYXBweUVtb3Rpb24iLCJsb2FkVGltZXIiLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwibGFzdENvbnRleHRSZWYiLCJjdXJyZW50IiwiZ2V0QW5pbWF0aW9uQ2xhc3NlcyIsImNsYXNzZXMiLCJkaXYiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwidGl0bGUiLCJzcmMiLCJhbHQiLCJ3aWR0aCIsImhlaWdodCIsInByaW9yaXR5IiwidW5vcHRpbWl6ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Character.js\n"));

/***/ })

});
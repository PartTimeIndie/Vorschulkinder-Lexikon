"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Character */ \"./components/Character.js\");\n/* harmony import */ var _components_CategoryTile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/CategoryTile */ \"./components/CategoryTile.js\");\n/* harmony import */ var _barrel_optimize_names_motion_framer_motion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=motion!=!framer-motion */ \"__barrel_optimize__?names=motion!=!./node_modules/framer-motion/dist/es/index.mjs\");\n/* harmony import */ var _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/animationManager */ \"./utils/animationManager.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Home() {\n    _s();\n    const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedCategory, setSelectedCategory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [subcategories, setSubcategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [animals, setAnimals] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [characterContext, setCharacterContext] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"idle\");\n    const [currentView, setCurrentView] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"main\"); // 'main', 'category', 'animals', 'transitioning'\n    const [clickedItemId, setClickedItemId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [scrollProgress, setScrollProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [recentItems, setRecentItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [playedAnimals, setPlayedAnimals] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentlyPlaying, setCurrentlyPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const scrollContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Image Preloading State\n    const [preloadedData, setPreloadedData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPreloading, setIsPreloading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Tile Pool System - 100 feste Tiles\n    const TILE_POOL_SIZE = 100;\n    const [tilePool, setTilePool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>{\n        // Initialisiere 100 leere Tiles\n        return Array.from({\n            length: TILE_POOL_SIZE\n        }, (_, index)=>({\n                id: \"tile-\".concat(index),\n                isVisible: false,\n                content: null,\n                animationMode: null,\n                isAnimal: false,\n                isPlayed: false,\n                isCurrentlyPlaying: false,\n                onClick: null\n            }));\n    });\n    // Zentraler Animation State\n    const [currentGridAnimation, setCurrentGridAnimation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"slideFromLeft\");\n    const [globalAnimationDirection, setGlobalAnimationDirection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"down\");\n    // Local Storage Utility-Funktionen\n    const savePlayedAnimalsToStorage = (playedList)=>{\n        try {\n            localStorage.setItem(\"kinderlexikon_played_animals\", JSON.stringify(playedList));\n        } catch (error) {\n            console.error(\"Error saving to localStorage:\", error);\n        }\n    };\n    const loadPlayedAnimalsFromStorage = ()=>{\n        try {\n            const saved = localStorage.getItem(\"kinderlexikon_played_animals\");\n            return saved ? JSON.parse(saved) : [];\n        } catch (error) {\n            console.error(\"Error loading from localStorage:\", error);\n            return [];\n        }\n    };\n    // HIERARCHISCHES Recent Items Local Storage System\n    const getStorageKey = function(level) {\n        let categorySlug = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, subcategorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (level === \"main\") return \"kinderlexikon_recent_main\";\n        if (level === \"category\" && categorySlug) return \"kinderlexikon_recent_cat_\".concat(categorySlug);\n        if (level === \"animals\" && categorySlug && subcategorySlug) return \"kinderlexikon_recent_animals_\".concat(categorySlug, \"_\").concat(subcategorySlug);\n        return \"kinderlexikon_recent_fallback\"; // Fallback\n    };\n    const saveRecentItemsToStorage = function(recentList, level) {\n        let categorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, subcategorySlug = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        try {\n            const key = getStorageKey(level, categorySlug, subcategorySlug);\n            localStorage.setItem(key, JSON.stringify(recentList));\n            console.log(\"\\uD83D\\uDCBE Saved recent items for \".concat(level, \":\"), recentList);\n        } catch (error) {\n            console.error(\"Error saving recent items to localStorage:\", error);\n        }\n    };\n    const loadRecentItemsFromStorage = function(level) {\n        let categorySlug = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, subcategorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        try {\n            const key = getStorageKey(level, categorySlug, subcategorySlug);\n            const saved = localStorage.getItem(key);\n            const result = saved ? JSON.parse(saved) : [];\n            console.log(\"\\uD83D\\uDCC2 Loaded recent items for \".concat(level, \":\"), result);\n            return result;\n        } catch (error) {\n            console.error(\"Error loading recent items from localStorage:\", error);\n            return [];\n        }\n    };\n    // Utility-Funktionen für zufällige Anordnung\n    const shuffleArray = (array)=>{\n        const shuffled = [\n            ...array\n        ];\n        for(let i = shuffled.length - 1; i > 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [\n                shuffled[j],\n                shuffled[i]\n            ];\n        }\n        return shuffled;\n    };\n    const arrangeItemsWithRecent = function(items) {\n        let recentIds = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n        // Recent Items in der richtigen Reihenfolge (zuletzt geklickt zuerst)\n        const recentItems = [];\n        recentIds.forEach((recentId)=>{\n            const item = items.find((item)=>item.id === recentId);\n            if (item) recentItems.push(item);\n        });\n        // Andere Items zufällig anordnen\n        const otherItems = items.filter((item)=>!recentIds.includes(item.id));\n        const shuffledOthers = shuffleArray(otherItems);\n        return [\n            ...recentItems,\n            ...shuffledOthers\n        ];\n    };\n    // Hierarchisches Add-to-Recent System\n    const addToRecent = function(itemId, level) {\n        let categorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, subcategorySlug = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        setRecentItems((prev)=>{\n            const newRecent = [\n                itemId,\n                ...prev.filter((id)=>id !== itemId)\n            ];\n            const limitedRecent = newRecent.slice(0, 4); // Nur letzte 4 behalten\n            saveRecentItemsToStorage(limitedRecent, level, categorySlug, subcategorySlug); // Hierarchisch speichern\n            return limitedRecent;\n        });\n    };\n    // Context-abhängiges Recent Items laden\n    const getCurrentRecentItems = ()=>{\n        if (currentView === \"main\") {\n            return loadRecentItemsFromStorage(\"main\");\n        } else if (currentView === \"category\" && selectedCategory) {\n            return loadRecentItemsFromStorage(\"category\", selectedCategory.slug);\n        } else if (currentView === \"animals\" && selectedCategory) {\n            // Für Animals: Category + aktuell geladene Subcategory identifizieren\n            return loadRecentItemsFromStorage(\"animals\", selectedCategory.slug, \"current_subcat\");\n        }\n        return [];\n    };\n    // Kategorien vom Backend laden mit zufälliger Animation\n    const loadCategories = async ()=>{\n        try {\n            setLoading(true);\n            console.log(\"\\uD83D\\uDD04 Loading categories...\");\n            // Zufällige Animation für neues Grid wählen\n            const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n            setCurrentGridAnimation(randomAnimation);\n            const response = await fetch(\"/api/categories\");\n            const data = await response.json();\n            if (data.categories) {\n                console.log(\"✅ Loaded \".concat(data.categories.length, \" categories\"));\n                // HIERARCHISCH: Kategorien mit Main-Recent-Logic anordnen\n                const mainRecentItems = loadRecentItemsFromStorage(\"main\");\n                const arrangedCategories = arrangeItemsWithRecent(data.categories, mainRecentItems);\n                setRecentItems(mainRecentItems); // State aktualisieren\n                setCategories(arrangedCategories);\n                setError(null);\n            } else {\n                throw new Error(\"No categories found\");\n            }\n        } catch (err) {\n            console.error(\"Error loading categories:\", err);\n            setError(\"Fehler beim Laden der Kategorien. Bitte versuche es nochmal!\");\n            setCategories([]); // Explizit leeres Array setzen\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Spezifische Kategorie mit Subkategorien laden mit Animation\n    const loadCategoryDetails = async (slug)=>{\n        try {\n            // Nur neue Animation wählen wenn nicht schon von Navigation gesetzt\n            if (!currentGridAnimation || currentGridAnimation === \"slideFromLeft\") {\n                const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n                setCurrentGridAnimation(randomAnimation);\n            }\n            const response = await fetch(\"/api/categories/\".concat(slug));\n            const data = await response.json();\n            if (data.category) {\n                setSelectedCategory(data.category);\n                // HIERARCHISCH: Subkategorien mit Category-spezifischen Recent Items anordnen\n                const subcats = data.category.subcategories || [];\n                const categoryRecentItems = loadRecentItemsFromStorage(\"category\", slug);\n                const arrangedSubcats = arrangeItemsWithRecent(subcats, categoryRecentItems);\n                setRecentItems(categoryRecentItems); // State aktualisieren\n                setSubcategories(arrangedSubcats);\n                setCharacterContext(slug); // Character-Context auf Kategorie setzen\n                setError(null);\n            } else {\n                throw new Error(\"Category not found\");\n            }\n        } catch (err) {\n            console.error(\"Error loading category details:\", err);\n            setError(\"Fehler beim Laden der Kategorie-Details!\");\n        }\n    };\n    // Audio-Wiedergabe Funktion mit Stop-Management\n    const playAudio = (audioPath)=>{\n        if (audioPath) {\n            try {\n                // Alle vorherigen Audios stoppen\n                if (window.currentAudio) {\n                    window.currentAudio.pause();\n                    window.currentAudio.currentTime = 0;\n                }\n                // Neues Audio erstellen und abspielen\n                const audio = new Audio(audioPath);\n                window.currentAudio = audio; // Global speichern für Stop-Management\n                audio.play().catch((err)=>{\n                    console.log(\"Audio autoplay verhindert:\", err);\n                });\n                // Audio aus globalem Storage entfernen wenn beendet\n                audio.addEventListener(\"ended\", ()=>{\n                    if (window.currentAudio === audio) {\n                        window.currentAudio = null;\n                    }\n                });\n            } catch (error) {\n                console.error(\"Audio-Fehler:\", error);\n            }\n        }\n    };\n    // Image Preloading Funktion\n    const preloadNextContent = async function(slug) {\n        let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"category\";\n        try {\n            setIsPreloading(true);\n            console.log(\"\\uD83D\\uDD04 Preloading \".concat(type, \": \").concat(slug));\n            let response;\n            if (type === \"category\") {\n                response = await fetch(\"/api/categories/\".concat(slug));\n            } else if (type === \"animals\") {\n                response = await fetch(\"/api/animals/category/\".concat(slug));\n            }\n            const data = await response.json();\n            if (data) {\n                var _data_category;\n                setPreloadedData({\n                    type,\n                    slug,\n                    data\n                });\n                console.log(\"✅ Preloaded \".concat(type, \" data:\"), data);\n                // Preload Images\n                const imagesToPreload = [];\n                if (type === \"category\" && ((_data_category = data.category) === null || _data_category === void 0 ? void 0 : _data_category.subcategories)) {\n                    imagesToPreload.push(...data.category.subcategories.map((sub)=>\"http://localhost:5000/images/\".concat(sub.image.filename)));\n                } else if (type === \"animals\" && data.animals) {\n                    imagesToPreload.push(...data.animals.map((animal)=>\"http://localhost:5000/images/\".concat(animal.image.filename)));\n                }\n                // Promise.all für alle Bilder\n                await Promise.all(imagesToPreload.map((src)=>{\n                    return new Promise((resolve)=>{\n                        const img = new Image();\n                        img.onload = ()=>resolve();\n                        img.onerror = ()=>resolve(); // Auch bei Fehlern weitermachen\n                        img.src = src;\n                    });\n                }));\n                console.log(\"\\uD83D\\uDDBC️ Preloaded \".concat(imagesToPreload.length, \" images\"));\n            }\n        } catch (error) {\n            console.error(\"Preloading error:\", error);\n        } finally{\n            setIsPreloading(false);\n        }\n    };\n    // Hauptkategorie angeklickt - MIT Image Preloading\n    const handleCategoryClick = (category)=>{\n        if (currentView === \"transitioning\") return; // Keine Klicks während Transition\n        const direction = getRandomDirection();\n        // SOFORT Image Preloading starten\n        preloadNextContent(category.slug, \"category\");\n        // ===== BATCH ALLE STATE UPDATES IN EINEM CALL =====\n        react__WEBPACK_IMPORTED_MODULE_1___default().startTransition(()=>{\n            setClickedItemId(category.id);\n            setGlobalAnimationDirection(direction);\n            setCurrentView(\"transitioning\");\n        });\n        // Neue zufällige Animation für das nächste Grid wählen\n        const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n        setCurrentGridAnimation(randomAnimation);\n        setCharacterContext(category.slug); // Character-Emotion sofort wechseln\n        addToRecent(category.id, \"main\"); // HIERARCHISCH: Zu Main Recent Items hinzufügen\n        // Audio abspielen wenn vorhanden\n        if (category.audio && category.audio.path) {\n            playAudio(\"/\".concat(category.audio.path));\n        }\n        // Nach Animation die vorgeladenen Daten verwenden\n        setTimeout(()=>{\n            if (preloadedData && preloadedData.slug === category.slug && preloadedData.type === \"category\") {\n                // Verwende vorgeladene Daten\n                const data = preloadedData.data;\n                if (data.category) {\n                    setSelectedCategory(data.category);\n                    const subcats = data.category.subcategories || [];\n                    const categoryRecentItems = loadRecentItemsFromStorage(\"category\", category.slug);\n                    const arrangedSubcats = arrangeItemsWithRecent(subcats, categoryRecentItems);\n                    setRecentItems(categoryRecentItems);\n                    setSubcategories(arrangedSubcats);\n                    setError(null);\n                }\n                setPreloadedData(null); // Reset nach Verwendung\n            } else {\n                // Fallback: Normale Ladung\n                loadCategoryDetails(category.slug);\n            }\n            setCurrentView(\"category\");\n            setClickedItemId(null);\n        }, 1800); // Warten bis Animationen fertig sind (1.8s)\n    };\n    // Subkategorie angeklickt - MIT Image Preloading\n    const handleSubcategoryClick = (subcategory)=>{\n        if (currentView === \"transitioning\") return; // Keine Klicks während Transition\n        console.log(\"\\uD83D\\uDD25 SUBCATEGORY CLICKED: \".concat(subcategory.name, \" (ID: \").concat(subcategory.id, \")\"));\n        const direction = getRandomDirection();\n        console.log(\"\\uD83C\\uDFAF Generated direction: \".concat(direction));\n        // SOFORT Image Preloading für Tiere starten\n        preloadNextContent(subcategory.slug, \"animals\");\n        // ===== BATCH ALLE STATE UPDATES IN EINEM CALL =====\n        react__WEBPACK_IMPORTED_MODULE_1___default().startTransition(()=>{\n            setClickedItemId(subcategory.id);\n            setGlobalAnimationDirection(direction);\n            setCurrentView(\"transitioning\");\n        });\n        console.log(\"\\uD83D\\uDD04 Batched state update completed\");\n        // Neue zufällige Animation für das nächste Grid wählen\n        const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n        setCurrentGridAnimation(randomAnimation);\n        setCharacterContext(subcategory.slug);\n        addToRecent(subcategory.id, \"category\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug); // HIERARCHISCH: Zu Category Recent Items\n        // Audio abspielen wenn vorhanden\n        if (subcategory.audio && subcategory.audio.path) {\n            playAudio(\"/\".concat(subcategory.audio.path));\n        }\n        // Nach Animation die vorgeladenen Tier-Daten verwenden\n        setTimeout(()=>{\n            if (preloadedData && preloadedData.slug === subcategory.slug && preloadedData.type === \"animals\") {\n                // Verwende vorgeladene Tier-Daten\n                const data = preloadedData.data;\n                if (data.animals) {\n                    const animalRecentItems = loadRecentItemsFromStorage(\"animals\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug, subcategory.slug);\n                    const arrangedAnimals = arrangeItemsWithRecent(data.animals, animalRecentItems);\n                    setRecentItems(animalRecentItems);\n                    setAnimals(arrangedAnimals);\n                    setError(null);\n                }\n                setPreloadedData(null); // Reset nach Verwendung\n            } else {\n                // Fallback: Normale Ladung\n                loadAnimalsForCategory(subcategory.slug);\n            }\n            setCurrentView(\"animals\"); // Wechsel zu animals view\n            setClickedItemId(null);\n        }, 1800);\n    };\n    // Tiere für spezifische Subkategorie laden - FIXED API CALL\n    const loadAnimalsForCategory = async (subcategorySlug)=>{\n        try {\n            setLoading(true);\n            // FIXED: Verwende die Subkategorie-Slug direkt für das Filtering\n            const response = await fetch(\"/api/animals/category/\".concat(subcategorySlug));\n            const data = await response.json();\n            if (data.animals && data.animals.length > 0) {\n                // HIERARCHISCH: Animals mit Subcategory-spezifischen Recent Items anordnen\n                const animalsRecentItems = loadRecentItemsFromStorage(\"animals\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug, subcategorySlug);\n                const arrangedAnimals = arrangeItemsWithRecent(data.animals, animalsRecentItems);\n                setRecentItems(animalsRecentItems); // State aktualisieren\n                // Animals setzen\n                setAnimals(arrangedAnimals);\n                // Character-Context auf Subkategorie setzen\n                setCharacterContext(subcategorySlug);\n                setError(null);\n            } else {\n                // Keine Tiere gefunden - leeres Array setzen\n                setAnimals([]);\n                setError(\"Keine Tiere in dieser Kategorie gefunden.\");\n                console.log(\"ℹ️ Keine Tiere f\\xfcr Subkategorie '\".concat(subcategorySlug, \"' gefunden\"));\n            }\n        } catch (err) {\n            console.error(\"Error loading animals:\", err);\n            setError(\"Fehler beim Laden der Tier-Eintr\\xe4ge!\");\n            setAnimals([]);\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Tier-Klick Handler mit Voice-Over und Abzeichen\n    const handleAnimalClick = (animal)=>{\n        var _animals_find;\n        if (currentView === \"transitioning\") return;\n        // Stoppe vorheriges Audio\n        if (window.currentAudio) {\n            window.currentAudio.pause();\n            window.currentAudio.currentTime = 0;\n        }\n        // Setze aktuell spielendes Tier\n        setCurrentlyPlaying(animal.id);\n        // HIERARCHISCH: Animal zu Animals Recent Items hinzufügen (bestimme Subcategory dynamisch)\n        const currentSubcategory = ((_animals_find = animals.find((a)=>a.id === animal.id)) === null || _animals_find === void 0 ? void 0 : _animals_find.category) || \"unknown\";\n        addToRecent(animal.id, \"animals\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug, currentSubcategory);\n        // Markiere als gehört (für Abzeichen) - mit Local Storage\n        if (!playedAnimals.includes(animal.id)) {\n            const newPlayedAnimals = [\n                ...playedAnimals,\n                animal.id\n            ];\n            setPlayedAnimals(newPlayedAnimals);\n            savePlayedAnimalsToStorage(newPlayedAnimals);\n        }\n        // Audio abspielen\n        if (animal.audio && animal.audio.path) {\n            playAudio(\"/\".concat(animal.audio.path));\n        }\n        // Reset currently playing nach Audio Ende\n        setTimeout(()=>{\n            setCurrentlyPlaying(null);\n        }, 5000); // Grober Schätzwert für Audio-Länge\n    };\n    // Zurück zu Hauptkategorien mit Animation\n    const handleBackToCategories = ()=>{\n        console.log(\"\\uD83D\\uDD19 Back to categories clicked\");\n        // Neue zufällige Animation für das nächste Grid wählen\n        const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n        setCurrentGridAnimation(randomAnimation);\n        // States in richtiger Reihenfolge zurücksetzen\n        react__WEBPACK_IMPORTED_MODULE_1___default().startTransition(()=>{\n            setClickedItemId(null);\n            setSelectedCategory(null);\n            setSubcategories([]);\n            setAnimals([]);\n            setCharacterContext(\"idle\");\n            setCurrentView(\"main\");\n        });\n        // Kategorien neu laden mit aktuellen Recent Items\n        setTimeout(()=>{\n            loadCategories();\n        }, 100); // Kurz warten bis States gesetzt sind\n    };\n    // Zurück zu Subkategorien von Animal-Ansicht mit Animation\n    const handleBackToSubcategories = ()=>{\n        console.log(\"\\uD83D\\uDD19 Back to subcategories clicked\");\n        // Neue zufällige Animation für das nächste Grid wählen\n        const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n        setCurrentGridAnimation(randomAnimation);\n        // States in richtiger Reihenfolge zurücksetzen\n        react__WEBPACK_IMPORTED_MODULE_1___default().startTransition(()=>{\n            setAnimals([]);\n            setCurrentView(\"category\");\n            setCharacterContext(selectedCategory ? selectedCategory.slug : \"idle\");\n        });\n        // Subkategorien neu laden mit aktuellen Recent Items\n        setTimeout(()=>{\n            if (selectedCategory) {\n                loadCategoryDetails(selectedCategory.slug);\n            }\n        }, 100); // Kurz warten bis States gesetzt sind\n    };\n    // Character Emotion-Change Handler\n    const handleCharacterEmotionChange = (emotion)=>{\n        console.log(\"Character emotion changed to: \".concat(emotion));\n    // Hier können später Sounds oder andere Effekte getriggert werden\n    };\n    // Scroll Handler für Scroll-Indikator\n    const handleScroll = ()=>{\n        const container = scrollContainerRef.current;\n        if (container) {\n            const scrollTop = container.scrollTop;\n            const scrollHeight = container.scrollHeight - container.clientHeight;\n            const progress = scrollHeight > 0 ? scrollTop / scrollHeight * 100 : 0;\n            setScrollProgress(Math.min(100, Math.max(0, progress)));\n        }\n    };\n    // Zufällige Richtung für ALLE Tiles gemeinsam\n    const getRandomDirection = ()=>{\n        const directions = [\n            \"down\",\n            \"up\",\n            \"left\",\n            \"right\",\n            \"up-left\",\n            \"up-right\",\n            \"down-left\",\n            \"down-right\"\n        ];\n        return directions[Math.floor(Math.random() * directions.length)];\n    };\n    // Bestimme Animation-Mode für ein Tile\n    const getAnimationMode = (itemId)=>{\n        if (currentView === \"transitioning\") {\n            if (clickedItemId === itemId) {\n                console.log(\"\\uD83C\\uDFAF CLICKED TILE: \".concat(itemId, \" (matches clickedItemId: \").concat(clickedItemId, \")\"));\n                return \"clicked\";\n            } else {\n                console.log(\"\\uD83D\\uDE80 FLY OUT TILE: \".concat(itemId, \" (clickedItemId: \").concat(clickedItemId, \", direction: \").concat(globalAnimationDirection, \")\"));\n                return \"fall-out-\".concat(globalAnimationDirection);\n            }\n        }\n        // Normale Position - keine individuelle Animation\n        return null;\n    };\n    // Tile Pool Management - Aktualisiere nur Inhalte\n    const updateTilePool = (items)=>{\n        setTilePool((prev)=>{\n            const updated = [\n                ...prev\n            ];\n            // RESET: Alle Tiles komplett zurücksetzen\n            updated.forEach((tile)=>{\n                tile.isVisible = false;\n                tile.content = null;\n                tile.animationMode = null;\n                tile.onClick = null;\n                tile.isAnimal = false;\n                tile.isPlayed = false;\n                tile.isCurrentlyPlaying = false;\n            });\n            // Nur die benötigten Tiles aktivieren und mit Inhalt füllen\n            items.forEach((item, index)=>{\n                if (index < TILE_POOL_SIZE) {\n                    const tile = updated[index];\n                    tile.isVisible = true;\n                    tile.content = item;\n                    tile.animationMode = getAnimationMode(item.id);\n                    // Click Handler je nach currentView setzen\n                    if (currentView === \"main\") {\n                        tile.onClick = handleCategoryClick;\n                        tile.isAnimal = false;\n                        tile.isPlayed = false;\n                        tile.isCurrentlyPlaying = false;\n                    } else if (currentView === \"category\" || currentView === \"transitioning\") {\n                        tile.onClick = handleSubcategoryClick;\n                        tile.isAnimal = false;\n                        tile.isPlayed = false;\n                        tile.isCurrentlyPlaying = false;\n                    } else if (currentView === \"animals\") {\n                        tile.onClick = handleAnimalClick;\n                        tile.isAnimal = true;\n                        tile.isPlayed = playedAnimals.includes(item.id);\n                        tile.isCurrentlyPlaying = currentlyPlaying === item.id;\n                    }\n                }\n            });\n            console.log(\"\\uD83C\\uDFAF Tile pool updated: \".concat(items.length, \" visible tiles, view: \").concat(currentView));\n            return updated;\n        });\n    };\n    // Zentrale Funktion: Welche Items sollen aktuell gerendert werden?\n    const getCurrentItems = ()=>{\n        if (currentView === \"main\" || !selectedCategory && currentView !== \"animals\") {\n            return categories;\n        } else if (currentView === \"category\" || selectedCategory && subcategories.length > 0 && currentView === \"transitioning\") {\n            return subcategories;\n        } else if (currentView === \"animals\") {\n            // Animals in CategoryTile-Format konvertieren\n            return animals.map((animal)=>({\n                    id: animal.id,\n                    name: animal.name,\n                    slug: animal.slug,\n                    image: animal.image,\n                    audio: animal.audio\n                }));\n        }\n        return [];\n    };\n    // Zentrale Funktion: Soll Grid-Animation laufen?\n    const shouldUseGridAnimation = ()=>{\n        return currentView !== \"transitioning\";\n    };\n    // Tile Pool aktualisieren wenn sich Inhalte ändern\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const currentItems = getCurrentItems();\n        console.log(\"\\uD83D\\uDD04 Updating tile pool for \".concat(currentView, \":\"), currentItems.length, \"items\", currentItems);\n        // Nur updaten wenn wir tatsächlich Items haben oder explizit leeren wollen\n        if (currentItems.length > 0 || currentView === \"main\" && categories.length === 0) {\n            updateTilePool(currentItems);\n        }\n    }, [\n        categories,\n        subcategories,\n        animals,\n        currentView,\n        playedAnimals,\n        currentlyPlaying,\n        clickedItemId,\n        globalAnimationDirection\n    ]);\n    // Debug useEffect für Back Navigation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83D\\uDCCA State Update - View: \".concat(currentView, \", Categories: \").concat(categories.length, \", Subcategories: \").concat(subcategories.length, \", Animals: \").concat(animals.length));\n        console.log(\"\\uD83C\\uDFAF Visible tiles: \".concat(tilePool.filter((t)=>t.isVisible).length));\n        tilePool.filter((t)=>t.isVisible).forEach((tile, index)=>{\n            var _tile_content;\n            console.log(\"  Tile \".concat(index, \": \").concat(((_tile_content = tile.content) === null || _tile_content === void 0 ? void 0 : _tile_content.name) || \"No name\"));\n        });\n    }, [\n        currentView,\n        categories,\n        subcategories,\n        animals,\n        tilePool\n    ]);\n    // Initial Kategorien laden\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        loadCategories();\n        setCurrentView(\"main\");\n    }, []);\n    // Lade gespeicherte gehörte Tiere beim Start\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedPlayedAnimals = loadPlayedAnimalsFromStorage();\n        setPlayedAnimals(savedPlayedAnimals);\n        // HIERARCHISCH: Lade Initial Recent Items für Main-View\n        const savedRecentItems = loadRecentItemsFromStorage(\"main\");\n        setRecentItems(savedRecentItems);\n    }, []);\n    // Kategorien, Subkategorien und Animals werden automatisch mit Recent Items angeordnet\n    // beim Laden durch arrangeItemsWithRecent() - kein separates useEffect nötig\n    // Loading State\n    if (loading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                            children: \"Kinderlexikon - Lade Kategorien...\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 674,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                            name: \"description\",\n                            content: \"Kinderlexikon f\\xfcr Vorschulkinder wird geladen\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 675,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                            name: \"viewport\",\n                            content: \"width=device-width, initial-scale=1\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 676,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"icon\",\n                            href: \"/favicon.ico\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 677,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 673,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"loading-spinner\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"spinner\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 681,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 680,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Character__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    currentContext: \"idle\",\n                    onEmotionChange: handleCharacterEmotionChange\n                }, void 0, false, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 684,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n            lineNumber: 672,\n            columnNumber: 7\n        }, this);\n    }\n    // Error State\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                            children: \"Kinderlexikon - Fehler\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 697,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                            name: \"description\",\n                            content: \"Fehler beim Laden des Kinderlexikons\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 698,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                            name: \"viewport\",\n                            content: \"width=device-width, initial-scale=1\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 699,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"icon\",\n                            href: \"/favicon.ico\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 700,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 696,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"error-message\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            children: \"Oops! \\uD83D\\uDE05\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 704,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 705,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: loadCategories,\n                            style: {\n                                background: \"#4caf50\",\n                                color: \"white\",\n                                border: \"none\",\n                                borderRadius: \"10px\",\n                                padding: \"12px 24px\",\n                                fontSize: \"1rem\",\n                                cursor: \"pointer\",\n                                marginTop: \"1rem\"\n                            },\n                            children: \"Nochmal versuchen\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 706,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 703,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Character__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    currentContext: \"idle\",\n                    onEmotionChange: handleCharacterEmotionChange\n                }, void 0, false, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 723,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n            lineNumber: 695,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Kinderlexikon - Entdecke die Welt!\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 734,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Interaktives Kinderlexikon f\\xfcr Vorschulkinder (3-7 Jahre)\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 735,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 736,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 737,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 733,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"character-section\",\n                children: [\n                    (selectedCategory || currentView === \"animals\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"back-button\",\n                        onClick: currentView === \"animals\" ? handleBackToSubcategories : handleBackToCategories,\n                        title: currentView === \"animals\" ? \"Zur\\xfcck zu den Unterkategorien\" : \"Zur\\xfcck zu den Hauptkategorien\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 744,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Character__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        currentContext: characterContext,\n                        onEmotionChange: handleCharacterEmotionChange\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 752,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 741,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"categories-section\",\n                ref: scrollContainerRef,\n                onScroll: handleScroll,\n                children: [\n                    shouldUseGridAnimation() ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_motion_framer_motion__WEBPACK_IMPORTED_MODULE_6__.motion.div, {\n                        className: \"tile-grid\",\n                        variants: _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getGridVariants(currentGridAnimation),\n                        initial: \"hidden\",\n                        animate: \"visible\",\n                        style: {\n                            opacity: tilePool.some((tile)=>tile.isVisible) ? 1 : 0,\n                            transition: \"opacity 0.1s ease\"\n                        },\n                        children: tilePool.map((poolTile, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CategoryTile__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                poolTile: poolTile,\n                                delay: poolTile.isVisible ? _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getTileDelay(tilePool.filter((t, i)=>t.isVisible && i <= index).length - 1, tilePool.filter((t)=>t.isVisible).length, currentGridAnimation) : 0\n                            }, poolTile.id, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 777,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 766,\n                        columnNumber: 11\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"tile-grid\",\n                        style: {\n                            opacity: tilePool.some((tile)=>tile.isVisible) ? 1 : 0,\n                            transition: \"opacity 0.1s ease\"\n                        },\n                        children: tilePool.map((poolTile)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CategoryTile__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                poolTile: poolTile,\n                                delay: 0\n                            }, poolTile.id, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 797,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 789,\n                        columnNumber: 11\n                    }, this),\n                    selectedCategory && subcategories.length === 0 && currentView === \"category\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            textAlign: \"center\",\n                            padding: \"3rem\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            style: {\n                                fontSize: \"1.2rem\",\n                                color: \"#666\"\n                            },\n                            children: \"Hier entstehen bald spannende Unterkategorien! \\uD83D\\uDEA7\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 809,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 808,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 759,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"scroll-indicator\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"scroll-thumb\",\n                    style: {\n                        height: \"\".concat(Math.max(15, scrollProgress), \"%\"),\n                        transform: \"translateY(\".concat(scrollProgress * 0.8, \"%)\")\n                    }\n                }, void 0, false, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 818,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 817,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n        lineNumber: 732,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"7lu6Il9lkezmNgLaLFZvjtCMzm4=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ })

});
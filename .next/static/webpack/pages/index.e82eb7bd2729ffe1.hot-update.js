"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Character */ \"./components/Character.js\");\n/* harmony import */ var _components_CategoryTile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/CategoryTile */ \"./components/CategoryTile.js\");\n/* harmony import */ var _barrel_optimize_names_motion_framer_motion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=motion!=!framer-motion */ \"__barrel_optimize__?names=motion!=!./node_modules/framer-motion/dist/es/index.mjs\");\n/* harmony import */ var _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/animationManager */ \"./utils/animationManager.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n// REMOVE: import { AnimatePresence } from 'framer-motion';\nfunction Home() {\n    _s();\n    const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedCategory, setSelectedCategory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [subcategories, setSubcategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [animals, setAnimals] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [characterContext, setCharacterContext] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"idle\");\n    const [currentView, setCurrentView] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"main\"); // 'main', 'category', 'animals', 'transitioning'\n    const [clickedItemId, setClickedItemId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [scrollProgress, setScrollProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [recentItems, setRecentItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [playedAnimals, setPlayedAnimals] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentlyPlaying, setCurrentlyPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const scrollContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [showGrid, setShowGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [animationKey, setAnimationKey] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isGridVisible, setIsGridVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [allImagesLoaded, setAllImagesLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isFullscreen, setIsFullscreen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showInfo, setShowInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBackButton, setShowBackButton] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [buttonsVisible, setButtonsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Image Preloading State\n    const [preloadedData, setPreloadedData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPreloading, setIsPreloading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Tile Pool System - 100 feste Tiles\n    const TILE_POOL_SIZE = 100;\n    const [tilePool, setTilePool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>{\n        // Initialisiere 100 leere Tiles\n        return Array.from({\n            length: TILE_POOL_SIZE\n        }, (_, index)=>({\n                id: \"tile-\".concat(index),\n                isVisible: false,\n                content: null,\n                animationMode: null,\n                isAnimal: false,\n                isPlayed: false,\n                isCurrentlyPlaying: false,\n                onClick: null\n            }));\n    });\n    // Hilfsfunktion: Setzt alle animationModes im tilePool auf null\n    function resetAllTileAnimations() {\n        setTilePool((prev)=>prev.map((tile)=>({\n                    ...tile,\n                    animationMode: null\n                })));\n    }\n    // Zentraler Animation State\n    const [currentGridAnimation, setCurrentGridAnimation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"slideFromLeft\");\n    const [globalAnimationDirection, setGlobalAnimationDirection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"down\");\n    // Local Storage Utility-Funktionen\n    const savePlayedAnimalsToStorage = (playedList)=>{\n        try {\n            localStorage.setItem(\"kinderlexikon_played_animals\", JSON.stringify(playedList));\n        } catch (error) {\n            console.error(\"Error saving to localStorage:\", error);\n        }\n    };\n    const loadPlayedAnimalsFromStorage = ()=>{\n        try {\n            const saved = localStorage.getItem(\"kinderlexikon_played_animals\");\n            return saved ? JSON.parse(saved) : [];\n        } catch (error) {\n            console.error(\"Error loading from localStorage:\", error);\n            return [];\n        }\n    };\n    // HIERARCHISCHES Recent Items Local Storage System\n    const getStorageKey = function(level) {\n        let categorySlug = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, subcategorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (level === \"main\") return \"kinderlexikon_recent_main\";\n        if (level === \"category\" && categorySlug) return \"kinderlexikon_recent_cat_\".concat(categorySlug);\n        if (level === \"animals\" && categorySlug && subcategorySlug) return \"kinderlexikon_recent_animals_\".concat(categorySlug, \"_\").concat(subcategorySlug);\n        return \"kinderlexikon_recent_fallback\"; // Fallback\n    };\n    const saveRecentItemsToStorage = function(recentList, level) {\n        let categorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, subcategorySlug = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        try {\n            const key = getStorageKey(level, categorySlug, subcategorySlug);\n            localStorage.setItem(key, JSON.stringify(recentList));\n            console.log(\"\\uD83D\\uDCBE Saved recent items for \".concat(level, \":\"), recentList);\n        } catch (error) {\n            console.error(\"Error saving recent items to localStorage:\", error);\n        }\n    };\n    const loadRecentItemsFromStorage = function(level) {\n        let categorySlug = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, subcategorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        try {\n            const key = getStorageKey(level, categorySlug, subcategorySlug);\n            const saved = localStorage.getItem(key);\n            const result = saved ? JSON.parse(saved) : [];\n            console.log(\"\\uD83D\\uDCC2 Loaded recent items for \".concat(level, \":\"), result);\n            return result;\n        } catch (error) {\n            console.error(\"Error loading recent items from localStorage:\", error);\n            return [];\n        }\n    };\n    // Utility-Funktionen für zufällige Anordnung\n    const shuffleArray = (array)=>{\n        const shuffled = [\n            ...array\n        ];\n        for(let i = shuffled.length - 1; i > 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [\n                shuffled[j],\n                shuffled[i]\n            ];\n        }\n        return shuffled;\n    };\n    const arrangeItemsWithRecent = function(items) {\n        let recentIds = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n        // Recent Items in der richtigen Reihenfolge (zuletzt geklickt zuerst)\n        const recentItems = [];\n        recentIds.forEach((recentId)=>{\n            const item = items.find((item)=>item.id === recentId);\n            if (item) recentItems.push(item);\n        });\n        // Andere Items zufällig anordnen\n        const otherItems = items.filter((item)=>!recentIds.includes(item.id));\n        const shuffledOthers = shuffleArray(otherItems);\n        return [\n            ...recentItems,\n            ...shuffledOthers\n        ];\n    };\n    // Hierarchisches Add-to-Recent System\n    const addToRecent = function(itemId, level) {\n        let categorySlug = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, subcategorySlug = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        setRecentItems((prev)=>{\n            const newRecent = [\n                itemId,\n                ...prev.filter((id)=>id !== itemId)\n            ];\n            const limitedRecent = newRecent.slice(0, 4); // Nur letzte 4 behalten\n            saveRecentItemsToStorage(limitedRecent, level, categorySlug, subcategorySlug); // Hierarchisch speichern\n            return limitedRecent;\n        });\n    };\n    // Context-abhängiges Recent Items laden\n    const getCurrentRecentItems = ()=>{\n        if (currentView === \"main\") {\n            return loadRecentItemsFromStorage(\"main\");\n        } else if (currentView === \"category\" && selectedCategory) {\n            return loadRecentItemsFromStorage(\"category\", selectedCategory.slug);\n        } else if (currentView === \"animals\" && selectedCategory) {\n            // Für Animals: Category + aktuell geladene Subcategory identifizieren\n            return loadRecentItemsFromStorage(\"animals\", selectedCategory.slug, \"current_subcat\");\n        }\n        return [];\n    };\n    // Kategorien vom Backend laden mit zufälliger Animation\n    const loadCategories = async ()=>{\n        try {\n            setLoading(true);\n            console.log(\"\\uD83D\\uDD04 Loading categories...\");\n            // Zufällige Animation für neues Grid wählen\n            const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n            setCurrentGridAnimation(randomAnimation);\n            // Statt API: Lade alle Kategorien aus public/kategorien/tiere.json (oder weitere, falls vorhanden)\n            const response = await fetch(\"/kategorien/tiere.json\");\n            const data = await response.json();\n            // Passe die Struktur an, falls nötig (z.B. data.categories -> [data] falls Einzeldatei)\n            if (data) {\n                const categories = Array.isArray(data) ? data : [\n                    data\n                ];\n                // HIERARCHISCH: Kategorien mit Main-Recent-Logic anordnen\n                const mainRecentItems = loadRecentItemsFromStorage(\"main\");\n                const arrangedCategories = arrangeItemsWithRecent(categories, mainRecentItems);\n                setRecentItems(mainRecentItems); // State aktualisieren\n                setCategories(arrangedCategories);\n                setError(null);\n            } else {\n                throw new Error(\"No categories found\");\n            }\n        } catch (err) {\n            console.error(\"Error loading categories:\", err);\n            setError(\"Fehler beim Laden der Kategorien. Bitte versuche es nochmal!\");\n            setCategories([]); // Explizit leeres Array setzen\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Spezifische Kategorie mit Subkategorien laden mit Animation\n    const loadCategoryDetails = async (slug)=>{\n        try {\n            // Nur neue Animation wählen wenn nicht schon von Navigation gesetzt\n            if (!currentGridAnimation || currentGridAnimation === \"slideFromLeft\") {\n                const randomAnimation = _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation();\n                setCurrentGridAnimation(randomAnimation);\n            }\n            // Statt API: Lade Kategorie-Details aus public/kategorien/[slug].json\n            const response = await fetch(\"/kategorien/\".concat(slug, \".json\"));\n            const data = await response.json();\n            if (data) {\n                setSelectedCategory(data);\n                // HIERARCHISCH: Subkategorien mit Category-spezifischen Recent Items anordnen\n                const subcats = data.subcategories || [];\n                const categoryRecentItems = loadRecentItemsFromStorage(\"category\", slug);\n                const arrangedSubcats = arrangeItemsWithRecent(subcats, categoryRecentItems);\n                setRecentItems(categoryRecentItems); // State aktualisieren\n                setSubcategories(arrangedSubcats);\n                setError(null);\n            } else {\n                throw new Error(\"Category not found\");\n            }\n        } catch (err) {\n            console.error(\"Error loading category details:\", err);\n            setError(\"Fehler beim Laden der Kategorie-Details!\");\n        }\n    };\n    // Audio-Wiedergabe Funktion mit Stop-Management\n    const playAudio = (audioPath)=>{\n        if (audioPath) {\n            try {\n                // Alle vorherigen Audios stoppen\n                if (window.currentAudio) {\n                    window.currentAudio.pause();\n                    window.currentAudio.currentTime = 0;\n                }\n                // Neues Audio erstellen und abspielen\n                const audio = new Audio(audioPath);\n                window.currentAudio = audio; // Global speichern für Stop-Management\n                audio.play().catch((err)=>{\n                    console.log(\"Audio autoplay verhindert:\", err);\n                });\n                // Audio aus globalem Storage entfernen wenn beendet\n                audio.addEventListener(\"ended\", ()=>{\n                    if (window.currentAudio === audio) {\n                        window.currentAudio = null;\n                    }\n                });\n            } catch (error) {\n                console.error(\"Audio-Fehler:\", error);\n            }\n        }\n    };\n    // Image Preloading Funktion\n    const preloadNextContent = async function(slug) {\n        let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"category\";\n        try {\n            setIsPreloading(true);\n            console.log(\"\\uD83D\\uDD04 Preloading \".concat(type, \": \").concat(slug));\n            let response;\n            // Statt API: Lade Kategorie-Details für Preloading\n            if (type === \"category\") {\n                response = await fetch(\"/kategorien/\".concat(slug, \".json\"));\n            } else if (type === \"animals\") {\n                // Lade alle Tiere und filtere nach Kategorie\n                response = await fetch(\"/eintraege/tierEintraege.json\");\n            }\n            const data = await response.json();\n            if (type === \"animals\") {\n                // Filtere Tiere nach Kategorie\n                data.animals = data.tiere.filter((tier)=>tier.categories.includes(slug));\n            }\n            if (data) {\n                var _data_category;\n                setPreloadedData({\n                    type,\n                    slug,\n                    data\n                });\n                console.log(\"✅ Preloaded \".concat(type, \" data:\"), data);\n                // Dynamische Host-Erkennung für mobile IP-Zugriffe\n                const protocol =  true ? window.location.protocol : 0;\n                const hostname =  true ? window.location.hostname : 0;\n                const port = \"5000\";\n                const tileSize = 300; // Tile-optimierte Größe - höhere Qualität\n                const quality = 75; // Performance-optimierte Qualität\n                const baseImageUrl = \"\".concat(protocol, \"//\").concat(hostname, \":\").concat(port, \"/images/\");\n                // Preload Images mit Resize-Parametern\n                const imagesToPreload = [];\n                const baseUrl = getBaseImageUrl();\n                if (type === \"category\" && ((_data_category = data.category) === null || _data_category === void 0 ? void 0 : _data_category.subcategories)) {\n                    imagesToPreload.push(...data.category.subcategories.map((sub)=>\"\".concat(baseUrl).concat(sub.image.filename, \"?w=\").concat(tileSize, \"&h=\").concat(tileSize, \"&q=\").concat(quality)));\n                } else if (type === \"animals\" && data.animals) {\n                    imagesToPreload.push(...data.animals.map((animal)=>\"\".concat(baseUrl).concat(animal.image.filename, \"?w=\").concat(tileSize, \"&h=\").concat(tileSize, \"&q=\").concat(quality)));\n                }\n                // Promise.all für alle Bilder\n                await Promise.all(imagesToPreload.map((src)=>{\n                    return new Promise((resolve)=>{\n                        const img = new Image();\n                        img.onload = ()=>resolve();\n                        img.onerror = ()=>resolve(); // Auch bei Fehlern weitermachen\n                        img.src = src;\n                    });\n                }));\n                console.log(\"\\uD83D\\uDDBC️ Preloaded \".concat(imagesToPreload.length, \" images\"));\n            }\n        } catch (error) {\n            console.error(\"Preloading error:\", error);\n        } finally{\n            setIsPreloading(false);\n        }\n    };\n    // Hilfsfunktion: Preload mehrere Bilder, gibt Promise zurück\n    async function preloadImages(urls) {\n        await Promise.all(urls.map((url)=>{\n            // Prüfe, ob schon im Cache\n            const cacheKey = \"imgcache_\".concat(url, \"_\");\n            if (localStorage.getItem(cacheKey)) return Promise.resolve();\n            // Sonst Bild laden\n            return fetch(url).then((r)=>r.blob()).then((blob)=>new Promise((resolve, reject)=>{\n                    const reader = new FileReader();\n                    reader.onloadend = ()=>{\n                        try {\n                            localStorage.setItem(cacheKey, reader.result);\n                        } catch (e) {}\n                        resolve();\n                    };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(blob);\n                }));\n        }));\n    }\n    // Hilfsfunktion: Ermittle Basis-URL für Bilder je nach Umgebung\n    function getBaseImageUrl() {\n        if ( true && window.location.hostname === \"localhost\" && window.location.port === \"3000\") {\n            return \"http://localhost:5000/images/\";\n        }\n        return \"/images/\";\n    }\n    // Hilfsfunktion: Sammle alle Bild-URLs für Kategorie/Subkategorie/Tiere\n    function getAllImageUrlsForCategory(category) {\n        const tileSize = 300;\n        const quality = 75;\n        const baseUrl = getBaseImageUrl();\n        if (!(category === null || category === void 0 ? void 0 : category.subcategories)) return [];\n        return category.subcategories.map((sub)=>\"\".concat(baseUrl).concat(sub.image.filename, \"?w=\").concat(tileSize, \"&h=\").concat(tileSize, \"&q=\").concat(quality));\n    }\n    function getAllImageUrlsForAnimals(animals) {\n        const tileSize = 300;\n        const quality = 75;\n        const baseUrl = getBaseImageUrl();\n        return animals.map((animal)=>\"\".concat(baseUrl).concat(animal.image.filename, \"?w=\").concat(tileSize, \"&h=\").concat(tileSize, \"&q=\").concat(quality));\n    }\n    // Hilfsfunktion: Warte, bis alle Base64-Bilder wirklich im <img> geladen sind\n    function waitForAllImagesToLoad(imageSrcs) {\n        return Promise.all(imageSrcs.map((src)=>new Promise((resolve)=>{\n                const img = new window.Image();\n                img.onload = resolve;\n                img.onerror = resolve;\n                img.src = src;\n            })));\n    }\n    // Hauptkategorie angeklickt - MIT Image Preloading\n    const handleCategoryClick = async (category)=>{\n        if (currentView === \"transitioning\") return;\n        setCurrentView(\"transitioning\");\n        setClickedItemId(category.id);\n        setGlobalAnimationDirection(getRandomDirection());\n        setCurrentGridAnimation(_utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation());\n        setCharacterContext(category.slug);\n        addToRecent(category.id, \"main\");\n        if (category.audio && category.audio.path) playAudio(\"/\".concat(category.audio.path));\n        // 1. Lade Daten und starte Preloading SOFORT\n        const response = await fetch(\"/kategorien/\".concat(category.slug, \".json\"));\n        const data = await response.json();\n        const imageUrls = getAllImageUrlsForCategory(data.category);\n        const preloadPromise = preloadImages(imageUrls);\n        // 2. Animation abwarten\n        await new Promise((resolve)=>setTimeout(resolve, 1800));\n        if (scrollContainerRef.current) scrollContainerRef.current.scrollTop = 0;\n        resetAllTileAnimations();\n        // 3. Warte auf Preloading (falls noch nicht fertig)\n        await preloadPromise;\n        // 4. Pool-Update etc.\n        setSelectedCategory(data);\n        const subcats = data.subcategories || [];\n        const categoryRecentItems = loadRecentItemsFromStorage(\"category\", category.slug);\n        const arrangedSubcats = arrangeItemsWithRecent(subcats, categoryRecentItems);\n        setRecentItems(categoryRecentItems);\n        setSubcategories(arrangedSubcats);\n        setError(null);\n        setCurrentView(\"category\");\n        setClickedItemId(null);\n        setAnimationKey((k)=>k + 1);\n        // Warte, bis alle Bilder wirklich geladen sind\n        const base64s = subcats.map((sub)=>{\n            const url = getAllImageUrlsForCategory({\n                subcategories: [\n                    sub\n                ]\n            })[0];\n            const cacheKey = \"imgcache_\".concat(url, \"_\");\n            return localStorage.getItem(cacheKey);\n        });\n        setAllImagesLoaded(false);\n        waitForAllImagesToLoad(base64s).then(()=>setAllImagesLoaded(true));\n    };\n    // Subkategorie angeklickt - MIT Image Preloading\n    const handleSubcategoryClick = async (subcategory)=>{\n        if (currentView === \"transitioning\") return;\n        setCurrentView(\"transitioning\");\n        setClickedItemId(subcategory.id);\n        setGlobalAnimationDirection(getRandomDirection());\n        setCurrentGridAnimation(_utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation());\n        setCharacterContext(subcategory.slug);\n        addToRecent(subcategory.id, \"category\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug);\n        if (subcategory.audio && subcategory.audio.path) playAudio(\"/\".concat(subcategory.audio.path));\n        // 1. Lade Daten und starte Preloading SOFORT\n        const response = await fetch(\"/eintraege/tierEintraege.json\");\n        const data = await response.json();\n        data.animals = data.tiere.filter((tier)=>tier.categories.includes(subcategory.slug));\n        const imageUrls = getAllImageUrlsForAnimals(data.animals || []);\n        const preloadPromise = preloadImages(imageUrls);\n        // 2. Animation abwarten\n        await new Promise((resolve)=>setTimeout(resolve, 1800));\n        if (scrollContainerRef.current) scrollContainerRef.current.scrollTop = 0;\n        resetAllTileAnimations();\n        // 3. Warte auf Preloading (falls noch nicht fertig)\n        await preloadPromise;\n        // 4. Pool-Update etc.\n        const animalRecentItems = loadRecentItemsFromStorage(\"animals\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug, subcategory.slug);\n        const arrangedAnimals = arrangeItemsWithRecent(data.animals || [], animalRecentItems);\n        setRecentItems(animalRecentItems);\n        setAnimals(arrangedAnimals);\n        setError(null);\n        setCurrentView(\"animals\");\n        setClickedItemId(null);\n        setAnimationKey((k)=>k + 1);\n    };\n    // Tiere für spezifische Subkategorie laden - FIXED API CALL\n    const loadAnimalsForCategory = async (subcategorySlug)=>{\n        try {\n            setLoading(true);\n            // Statt API: Lade Tiere für spezifische Subkategorie\n            const response = await fetch(\"/eintraege/tierEintraege.json\");\n            const data = await response.json();\n            data.animals = data.tiere.filter((tier)=>tier.categories.includes(subcategorySlug));\n            if (data.animals && data.animals.length > 0) {\n                // HIERARCHISCH: Animals mit Subcategory-spezifischen Recent Items anordnen\n                const animalsRecentItems = loadRecentItemsFromStorage(\"animals\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug, subcategorySlug);\n                const arrangedAnimals = arrangeItemsWithRecent(data.animals, animalsRecentItems);\n                setRecentItems(animalsRecentItems); // State aktualisieren\n                // Animals setzen\n                setAnimals(arrangedAnimals);\n                setError(null);\n            } else {\n                // Keine Tiere gefunden - leeres Array setzen\n                setAnimals([]);\n                setError(\"Keine Tiere in dieser Kategorie gefunden.\");\n                console.log(\"ℹ️ Keine Tiere f\\xfcr Subkategorie '\".concat(subcategorySlug, \"' gefunden\"));\n            }\n        } catch (err) {\n            console.error(\"Error loading animals:\", err);\n            setError(\"Fehler beim Laden der Tier-Eintr\\xe4ge!\");\n            setAnimals([]);\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Tier-Klick Handler mit Voice-Over und Abzeichen\n    const handleAnimalClick = (animal)=>{\n        var _animals_find;\n        if (currentView === \"transitioning\") return;\n        // Stoppe vorheriges Audio\n        if (window.currentAudio) {\n            window.currentAudio.pause();\n            window.currentAudio.currentTime = 0;\n        }\n        // Setze aktuell spielendes Tier (ohne Verzögerung für sofortige grüne Outline)\n        console.log(\"\\uD83C\\uDFB5 OLD currentlyPlaying: \".concat(currentlyPlaying, \", NEW: \").concat(animal.id));\n        setCurrentlyPlaying(animal.id);\n        // HIERARCHISCH: Animal zu Animals Recent Items hinzufügen (bestimme Subcategory dynamisch)\n        const currentSubcategory = ((_animals_find = animals.find((a)=>a.id === animal.id)) === null || _animals_find === void 0 ? void 0 : _animals_find.category) || \"unknown\";\n        addToRecent(animal.id, \"animals\", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.slug, currentSubcategory);\n        // Markiere als gehört (für Abzeichen) - mit Local Storage\n        if (!playedAnimals.includes(animal.id)) {\n            const newPlayedAnimals = [\n                ...playedAnimals,\n                animal.id\n            ];\n            setPlayedAnimals(newPlayedAnimals);\n            savePlayedAnimalsToStorage(newPlayedAnimals);\n        }\n        // Audio abspielen\n        if (animal.audio && animal.audio.path) {\n            playAudio(\"/\".concat(animal.audio.path));\n            // Reset currently playing wenn Audio beendet ist\n            if (window.currentAudio) {\n                window.currentAudio.addEventListener(\"ended\", ()=>{\n                    setCurrentlyPlaying(null);\n                }, {\n                    once: true\n                }); // Event nur einmal verwenden\n            }\n        } else {\n            // Kein Audio vorhanden - nach kurzer Zeit reset\n            setTimeout(()=>{\n                setCurrentlyPlaying(null);\n            }, 2000);\n        }\n    };\n    // Zurück zu Hauptkategorien mit Animation\n    const handleBackToCategories = async ()=>{\n        if (currentView === \"transitioning\") return;\n        setCurrentView(\"transitioning\");\n        setClickedItemId(null);\n        setGlobalAnimationDirection(getRandomDirection());\n        setCurrentGridAnimation(_utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation());\n        await new Promise((resolve)=>setTimeout(resolve, 1800));\n        if (scrollContainerRef.current) scrollContainerRef.current.scrollTop = 0;\n        resetAllTileAnimations();\n        setSelectedCategory(null);\n        setSubcategories([]);\n        setAnimals([]);\n        setCharacterContext(\"idle\");\n        setCurrentlyPlaying(null);\n        setCurrentView(\"main\");\n        await loadCategories();\n        setAnimationKey((k)=>k + 1); // AnimationKey nach Pool-Update erhöhen\n    };\n    // Zurück zu Subkategorien von Animal-Ansicht mit Animation\n    const handleBackToSubcategories = async ()=>{\n        if (currentView === \"transitioning\") return;\n        setCurrentView(\"transitioning\");\n        setClickedItemId(null);\n        setGlobalAnimationDirection(getRandomDirection());\n        setCurrentGridAnimation(_utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getRandomGridAnimation());\n        await new Promise((resolve)=>setTimeout(resolve, 1800));\n        if (scrollContainerRef.current) scrollContainerRef.current.scrollTop = 0;\n        resetAllTileAnimations();\n        setIsGridVisible(false); // Grid sofort unsichtbar machen\n        setAnimals([]);\n        setCurrentlyPlaying(null);\n        setCharacterContext(selectedCategory ? selectedCategory.slug : \"idle\");\n        setCurrentView(\"category\");\n        let preloadPromise = Promise.resolve();\n        if (selectedCategory) {\n            // Statt API: Lade Kategorie-Details für Back-Navigation\n            const data = await (await fetch(\"/kategorien/\".concat(selectedCategory.slug, \".json\"))).json();\n            const imageUrls = getAllImageUrlsForCategory(data);\n            preloadPromise = preloadImages(imageUrls);\n            await loadCategoryDetails(selectedCategory.slug);\n        }\n        setTimeout(async ()=>{\n            await preloadPromise;\n            setAnimationKey((k)=>k + 1);\n            setIsGridVisible(true);\n        }, 0);\n    };\n    // Character Emotion-Change Handler\n    const handleCharacterEmotionChange = (emotion)=>{\n        console.log(\"Character emotion changed to: \".concat(emotion));\n    // Hier können später Sounds oder andere Effekte getriggert werden\n    };\n    // Scroll Handler für Scroll-Indikator\n    const handleScroll = ()=>{\n        const container = scrollContainerRef.current;\n        if (container) {\n            const scrollTop = container.scrollTop;\n            const scrollHeight = container.scrollHeight - container.clientHeight;\n            const progress = scrollHeight > 0 ? scrollTop / scrollHeight * 100 : 0;\n            setScrollProgress(Math.min(100, Math.max(0, progress)));\n        }\n    };\n    // Zufällige Richtung für ALLE Tiles gemeinsam\n    const getRandomDirection = ()=>{\n        const directions = [\n            \"down\",\n            \"up\",\n            \"left\",\n            \"right\",\n            \"up-left\",\n            \"up-right\",\n            \"down-left\",\n            \"down-right\"\n        ];\n        return directions[Math.floor(Math.random() * directions.length)];\n    };\n    // Bestimme Animation-Mode für ein Tile\n    const getAnimationMode = (itemId)=>{\n        if (currentView === \"transitioning\") {\n            if (clickedItemId === itemId) {\n                console.log(\"\\uD83C\\uDFAF CLICKED TILE: \".concat(itemId, \" (matches clickedItemId: \").concat(clickedItemId, \")\"));\n                return \"clicked\";\n            } else {\n                return \"fall-out-\".concat(globalAnimationDirection);\n            }\n        }\n        // Normale Position - keine individuelle Animation\n        return null;\n    };\n    // Tile Pool Management - Aktualisiere nur Inhalte\n    const updateTilePool = (items)=>{\n        // SPEZIAL: Während Transition nur Animation-Modi updaten, KEINE Content-Changes!\n        if (currentView === \"transitioning\") {\n            console.log(\"\\uD83C\\uDFAD Updating ONLY animation modes during transition\");\n            setTilePool((prev)=>{\n                const updated = [\n                    ...prev\n                ];\n                // Nur Animation-Modi updaten, Content und onClick NICHT ändern!\n                updated.forEach((tile)=>{\n                    if (tile.isVisible && tile.content) {\n                        const newAnimationMode = getAnimationMode(tile.content.id);\n                        if (tile.animationMode !== newAnimationMode) {\n                            tile.animationMode = newAnimationMode;\n                            console.log(\"\\uD83C\\uDFAF Updated animation for \".concat(tile.content.name, \": \").concat(newAnimationMode));\n                        }\n                    }\n                });\n                return updated;\n            });\n            return;\n        }\n        setTilePool((prev)=>{\n            const updated = [\n                ...prev\n            ];\n            // 1. Mark all tiles as not updated\n            updated.forEach((tile)=>{\n                tile._updated = false;\n            });\n            // 2. Update or reuse tiles for new items\n            items.forEach((item, index)=>{\n                if (index < TILE_POOL_SIZE) {\n                    var _tile_content;\n                    const tile = updated[index];\n                    const prevContentId = (_tile_content = tile.content) === null || _tile_content === void 0 ? void 0 : _tile_content.id;\n                    if (tile.isVisible && prevContentId === item.id) {\n                        // Only update animationMode and other dynamic fields\n                        // Debug: Reusing tile\n                        if (index < 5) console.log(\"[POOL] REUSE tile-\".concat(index, \": contentId=\").concat(item.id));\n                        tile.animationMode = getAnimationMode(item.id);\n                        tile.onClick = currentView === \"main\" ? handleCategoryClick : currentView === \"category\" ? handleSubcategoryClick : currentView === \"animals\" ? handleAnimalClick : null;\n                        tile.isAnimal = currentView === \"animals\";\n                        tile.isPlayed = currentView === \"animals\" ? playedAnimals.includes(item.id) : false;\n                        tile.isCurrentlyPlaying = currentView === \"animals\" ? currentlyPlaying === item.id : false;\n                        tile._updated = true;\n                    } else {\n                        // Debug: Assigning new content to tile\n                        if (index < 5) console.log(\"[POOL] ASSIGN tile-\".concat(index, \": contentId=\").concat(item.id, \" (was \").concat(prevContentId, \")\"));\n                        tile.isVisible = true;\n                        tile.content = item;\n                        tile.animationMode = getAnimationMode(item.id);\n                        tile.onClick = currentView === \"main\" ? handleCategoryClick : currentView === \"category\" ? handleSubcategoryClick : currentView === \"animals\" ? handleAnimalClick : null;\n                        tile.isAnimal = currentView === \"animals\";\n                        tile.isPlayed = currentView === \"animals\" ? playedAnimals.includes(item.id) : false;\n                        tile.isCurrentlyPlaying = currentView === \"animals\" ? currentlyPlaying === item.id : false;\n                        tile._updated = true;\n                    }\n                }\n            });\n            // 3. Hide tiles that are not used\n            updated.forEach((tile, index)=>{\n                if (!tile._updated) {\n                    var _tile_content;\n                    if (index < 5) console.log(\"[POOL] RESET tile-\".concat(index, \": was contentId=\").concat((_tile_content = tile.content) === null || _tile_content === void 0 ? void 0 : _tile_content.id));\n                    tile.isVisible = false;\n                    tile.content = null;\n                    tile.animationMode = null;\n                    tile.onClick = null;\n                    tile.isAnimal = false;\n                    tile.isPlayed = false;\n                    tile.isCurrentlyPlaying = false;\n                }\n                delete tile._updated;\n            });\n            // Only keep this summary log for pool\n            console.log(\"\\uD83C\\uDFAF Tile pool updated: \".concat(items.length, \" visible tiles, view: \").concat(currentView));\n            return updated;\n        });\n    };\n    // Zentrale Funktion: Welche Items sollen aktuell gerendert werden?\n    const getCurrentItems = ()=>{\n        if (currentView === \"main\" || !selectedCategory && currentView !== \"animals\") {\n            return categories;\n        } else if (currentView === \"category\" || selectedCategory && subcategories.length > 0 && currentView === \"transitioning\") {\n            return subcategories;\n        } else if (currentView === \"animals\") {\n            // Animals in CategoryTile-Format konvertieren\n            return animals.map((animal)=>({\n                    id: animal.id,\n                    name: animal.name,\n                    slug: animal.slug,\n                    image: animal.image,\n                    audio: animal.audio\n                }));\n        }\n        return [];\n    };\n    // Zentrale Funktion: Soll Grid-Animation laufen?\n    const shouldUseGridAnimation = ()=>{\n        return currentView !== \"transitioning\";\n    };\n    // Tile Pool aktualisieren wenn sich Inhalte ändern\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const currentItems = getCurrentItems();\n        console.log(\"\\uD83D\\uDD04 Updating tile pool for \".concat(currentView, \":\"), currentItems.length, \"items\", currentItems);\n        // Nur updaten wenn wir tatsächlich Items haben oder explizit leeren wollen\n        if (currentItems.length > 0 || currentView === \"main\" && categories.length === 0) {\n            updateTilePool(currentItems);\n        }\n    }, [\n        categories,\n        subcategories,\n        animals,\n        currentView,\n        playedAnimals,\n        currentlyPlaying,\n        clickedItemId,\n        globalAnimationDirection\n    ]);\n    // Debug useEffect für Back Navigation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83D\\uDCCA State Update - View: \".concat(currentView, \", Categories: \").concat(categories.length, \", Subcategories: \").concat(subcategories.length, \", Animals: \").concat(animals.length));\n        tilePool.filter((t)=>t.isVisible).forEach((tile, index)=>{\n            var _tile_content;\n            console.log(\"  Tile \".concat(index, \": \").concat(((_tile_content = tile.content) === null || _tile_content === void 0 ? void 0 : _tile_content.name) || \"No name\"));\n        });\n    }, [\n        currentView,\n        categories,\n        subcategories,\n        animals,\n        tilePool\n    ]);\n    // Initial Kategorien laden\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        loadCategories();\n        setCurrentView(\"main\");\n    }, []);\n    // Lade gespeicherte gehörte Tiere beim Start\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedPlayedAnimals = loadPlayedAnimalsFromStorage();\n        setPlayedAnimals(savedPlayedAnimals);\n        // HIERARCHISCH: Lade Initial Recent Items für Main-View\n        const savedRecentItems = loadRecentItemsFromStorage(\"main\");\n        setRecentItems(savedRecentItems);\n    }, []);\n    // Kategorien, Subkategorien und Animals werden automatisch mit Recent Items angeordnet\n    // beim Laden durch arrangeItemsWithRecent() - kein separates useEffect nötig\n    // Fullscreen logic\n    const handleToggleFullscreen = ()=>{\n        if (!isFullscreen) {\n            const elem = document.documentElement;\n            if (elem.requestFullscreen) {\n                elem.requestFullscreen();\n            } else if (elem.mozRequestFullScreen) {\n                elem.mozRequestFullScreen();\n            } else if (elem.webkitRequestFullscreen) {\n                elem.webkitRequestFullscreen();\n            } else if (elem.msRequestFullscreen) {\n                elem.msRequestFullscreen();\n            }\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fullscreenChangeHandler = ()=>{\n            setIsFullscreen(!!(document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement));\n        };\n        document.addEventListener(\"fullscreenchange\", fullscreenChangeHandler);\n        document.addEventListener(\"webkitfullscreenchange\", fullscreenChangeHandler);\n        document.addEventListener(\"mozfullscreenchange\", fullscreenChangeHandler);\n        document.addEventListener(\"MSFullscreenChange\", fullscreenChangeHandler);\n        return ()=>{\n            document.removeEventListener(\"fullscreenchange\", fullscreenChangeHandler);\n            document.removeEventListener(\"webkitfullscreenchange\", fullscreenChangeHandler);\n            document.removeEventListener(\"mozfullscreenchange\", fullscreenChangeHandler);\n            document.removeEventListener(\"MSFullscreenChange\", fullscreenChangeHandler);\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const shouldShow = selectedCategory || currentView === \"animals\";\n        if (shouldShow !== showBackButton) {\n            setButtonsVisible(false); // fade out all\n            setTimeout(()=>{\n                setShowBackButton(shouldShow); // update layout\n                setButtonsVisible(true); // fade in all\n            }, 450); // match CSS transition (was 250)\n        }\n    // eslint-disable-next-line\n    }, [\n        selectedCategory,\n        currentView\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Kinderlexikon - Entdecke die Welt!\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 837,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Interaktives Kinderlexikon f\\xfcr Vorschulkinder (3-7 Jahre)\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 838,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 839,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 840,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 836,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"character-section\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"character-buttons-row\".concat(!buttonsVisible ? \" buttons-fade-out\" : \"\"),\n                        children: [\n                            showBackButton && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"back-button\",\n                                onClick: currentView === \"animals\" ? handleBackToSubcategories : handleBackToCategories,\n                                title: currentView === \"animals\" ? \"Zur\\xfcck zu den Unterkategorien\" : \"Zur\\xfcck zu den Hauptkategorien\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                    src: \"/websiteBaseImages/back button.png\",\n                                    alt: \"Zur\\xfcck\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                    lineNumber: 852,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 847,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"fullscreen-button\",\n                                onClick: handleToggleFullscreen,\n                                title: isFullscreen ? \"Vollbildmodus verlassen\" : \"Vollbildmodus aktivieren\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                    src: isFullscreen ? \"/websiteBaseImages/closeButton.png\" : \"/websiteBaseImages/Fullscreen.png\",\n                                    alt: isFullscreen ? \"Schlie\\xdfen\" : \"Fullscreen\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                    lineNumber: 860,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 855,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"info-button\",\n                                onClick: ()=>setShowInfo(true),\n                                title: \"Info \\xfcber das Lexikon\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                    src: \"/websiteBaseImages/info.png\",\n                                    alt: \"Info\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                    lineNumber: 867,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 862,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 845,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Character__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        currentContext: loading || error ? \"idle\" : characterContext,\n                        onEmotionChange: handleCharacterEmotionChange\n                    }, \"main-character\" // Fester Key - wird nur EINMAL gemountet\n                    , false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 870,\n                        columnNumber: 9\n                    }, this),\n                    showInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"info-overlay-modal\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"info-overlay-content\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"info-overlay-close\",\n                                    onClick: ()=>setShowInfo(false),\n                                    title: \"Schlie\\xdfen\",\n                                    children: \"\\xd7\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                    lineNumber: 879,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    children: \"Warum ich dieses Kinderlexikon gemacht habe\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                    lineNumber: 880,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    children: [\n                                        \"Ich habe dieses Kinderlexikon f\\xfcr meine eigenen Kinder erstellt, weil sie ein gro\\xdfes Interesse an Tieren und Wissen im Allgemeinen haben. Leider haben wir bisher kein Lexikon gefunden, das auch f\\xfcr Kinder geeignet ist, die noch nicht lesen k\\xf6nnen. Deshalb habe ich angefangen, ein interaktives, gesprochenes Lexikon zu entwickeln – mit Bildern, einfacher Sprache und Audiounterst\\xfctzung.\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 882,\n                                            columnNumber: 403\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 882,\n                                            columnNumber: 408\n                                        }, this),\n                                        \"Derzeit gibt es nur die Kategorie „Tiere“, aber wenn meine Kinder oder auch andere Kinder Interesse an weiteren Kategorien haben, w\\xfcrde ich das Lexikon gerne erweitern. Ihr k\\xf6nnt mir gerne mitteilen, welche Themen ihr euch w\\xfcnscht – ich freue mich \\xfcber Vorschl\\xe4ge!\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 883,\n                                            columnNumber: 281\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 883,\n                                            columnNumber: 286\n                                        }, this),\n                                        \"Jede neue Hauptkategorie kostet mich jedoch rund 50 €, da ich die Bilder, Texte und Voiceovers mithilfe von KI generieren lasse. Diese Kosten kann ich aktuell nicht selbst tragen. Falls ihr das Projekt unterst\\xfctzen wollt, k\\xf6nnt ihr gerne \\xfcber den Donate-Button eine kleine Spende dalassen – ich w\\xfcrde dann die entsprechende Kategorie hinzuf\\xfcgen.\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 884,\n                                            columnNumber: 362\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 884,\n                                            columnNumber: 367\n                                        }, this),\n                                        \"Mein Ziel ist es, ein richtiges Lexikon f\\xfcr Kinder zu schaffen – zug\\xe4nglich, unterhaltsam und kindgerecht, auch f\\xfcr die J\\xfcngsten.\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 885,\n                                            columnNumber: 146\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 885,\n                                            columnNumber: 151\n                                        }, this),\n                                        \"Auch eine \\xdcbersetzung in andere Sprachen ist geplant. Daf\\xfcr m\\xfcsste ich jedoch noch zus\\xe4tzliche Entwicklungszeit investieren, um den Support daf\\xfcr technisch besser umzusetzen. Falls daran Interesse besteht, k\\xf6nnten wir gerne dar\\xfcber sprechen.\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 886,\n                                            columnNumber: 258\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 886,\n                                            columnNumber: 263\n                                        }, this),\n                                        \"Wenn ihr mich zus\\xe4tzlich unterst\\xfctzen m\\xf6chtet, schaut gerne bei meinen Spielen vorbei oder setzt sie auf eure Wunschliste:\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 887,\n                                            columnNumber: 139\n                                        }, this),\n                                        \"\\uD83D\\uDC49 Meine Entwicklerseite auf Steam \",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                            href: \"https://store.steampowered.com/curator/33183467\",\n                                            target: \"_blank\",\n                                            rel: \"noopener noreferrer\",\n                                            children: \"@https://store.steampowered.com/curator/33183467\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 888,\n                                            columnNumber: 52\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 888,\n                                            columnNumber: 204\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 888,\n                                            columnNumber: 209\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                            children: \"Technischer Hinweis & Attribution:\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 889,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 889,\n                                            columnNumber: 58\n                                        }, this),\n                                        \"Dieses Lexikon wurde mit Hilfe von K\\xfcnstlicher Intelligenz erstellt:\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 890,\n                                            columnNumber: 85\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                            children: \"Bilder:\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 891,\n                                            columnNumber: 17\n                                        }, this),\n                                        \" generiert mit OpenAI\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 891,\n                                            columnNumber: 52\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                            children: \"Voiceover:\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 892,\n                                            columnNumber: 17\n                                        }, this),\n                                        \" erstellt mit ElevenLabs\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 892,\n                                            columnNumber: 58\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                            children: \"Code & Umsetzung:\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 893,\n                                            columnNumber: 17\n                                        }, this),\n                                        \" mit Hilfe von Cursor und verschiedenen Language Models (LLMs)\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 893,\n                                            columnNumber: 103\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                            children: \"Soundeffekt:\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 894,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 894,\n                                            columnNumber: 36\n                                        }, this),\n                                        \"„Boy Laughing (5 y.o.)“ von Nakhas – freesound.org/s/506937/ – Lizenz: Creative Commons 0\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 895,\n                                            columnNumber: 106\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 895,\n                                            columnNumber: 111\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                            children: \"Bekannte Probleme:\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 896,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                            lineNumber: 896,\n                                            columnNumber: 42\n                                        }, this),\n                                        \"⚠️ Bei der Nutzung mit dem Firefox-Browser kann es aktuell zu Bildflackern kommen. Bitte nutzt in diesem Fall vor\\xfcbergehend einen anderen Browser (z. B. Chrome, Edge oder Safari), bis das Problem behoben ist.\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                    lineNumber: 881,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 878,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 877,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 844,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"character-categories-separator\",\n                \"aria-hidden\": \"true\"\n            }, void 0, false, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 904,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"categories-section\",\n                ref: scrollContainerRef,\n                onScroll: handleScroll,\n                children: [\n                    loading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"loading-spinner\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"spinner\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 913,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 912,\n                        columnNumber: 11\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"error-message\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                children: \"Oops! \\uD83D\\uDE05\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 920,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: error\n                            }, void 0, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 921,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: loadCategories,\n                                style: {\n                                    background: \"#4caf50\",\n                                    color: \"white\",\n                                    border: \"none\",\n                                    borderRadius: \"10px\",\n                                    padding: \"12px 24px\",\n                                    fontSize: \"1rem\",\n                                    cursor: \"pointer\",\n                                    marginTop: \"1rem\"\n                                },\n                                children: \"Nochmal versuchen\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 922,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 919,\n                        columnNumber: 11\n                    }, this),\n                    !loading && !error && allImagesLoaded && isGridVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_motion_framer_motion__WEBPACK_IMPORTED_MODULE_6__.motion.div, {\n                        className: \"tile-grid\",\n                        variants: _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getGridVariants(currentGridAnimation),\n                        initial: \"hidden\",\n                        animate: \"visible\",\n                        style: {\n                            opacity: tilePool.some((tile)=>tile.isVisible) ? 1 : 0,\n                            transition: \"opacity 0.1s ease\"\n                        },\n                        children: tilePool.map((poolTile, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CategoryTile__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                tileKey: poolTile.id,\n                                poolTile: poolTile,\n                                delay: poolTile.isVisible ? _utils_animationManager__WEBPACK_IMPORTED_MODULE_5__.animationManager.getTileDelay(tilePool.filter((t, i)=>t.isVisible && i <= index).length - 1, tilePool.filter((t)=>t.isVisible).length, currentGridAnimation) : 0\n                            }, poolTile.id, false, {\n                                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                                lineNumber: 954,\n                                columnNumber: 15\n                            }, this))\n                    }, animationKey, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 942,\n                        columnNumber: 11\n                    }, this),\n                    selectedCategory && subcategories.length === 0 && currentView === \"category\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            textAlign: \"center\",\n                            padding: \"3rem\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            style: {\n                                fontSize: \"1.2rem\",\n                                color: \"#666\"\n                            },\n                            children: \"Hier entstehen bald spannende Unterkategorien! \\uD83D\\uDEA7\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                            lineNumber: 971,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                        lineNumber: 970,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 905,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"scroll-indicator\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"scroll-thumb\",\n                    style: {\n                        height: \"\".concat(Math.max(15, scrollProgress), \"%\"),\n                        transform: \"translateY(\".concat(scrollProgress * 0.8, \"%)\")\n                    }\n                }, void 0, false, {\n                    fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                    lineNumber: 980,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n                lineNumber: 979,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\gitrepros\\\\Vorschulkinder Lexikon\\\\pages\\\\index.js\",\n        lineNumber: 835,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"EiTG43X6qce3/17oDpUscgWKQYw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ })

});